import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        boolean boolean41 = strComparableItor35.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor35.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor35.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor13.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor21.getComparator();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor21.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList25);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        boolean boolean25 = strComparableItor19.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor19.getIterators();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        boolean boolean47 = strComparableItor44.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        boolean boolean63 = strComparableItor57.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor57.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor57.getIterators();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableItor76.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor76);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        boolean boolean85 = strComparableItor82.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        boolean boolean89 = strComparableItor51.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        boolean boolean10 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor12.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor12.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator47 = strComparableItor33.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor51.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor51.getComparator();
        boolean boolean57 = strComparableItor51.hasNext();
        strComparableItor33.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor33.getIterators();
        boolean boolean61 = strComparableItor33.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardComparator47);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        java.lang.Class<?> wildcardClass7 = strComparableItor2.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        boolean boolean17 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        boolean boolean27 = strComparableItor21.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor21.getIterators();
        boolean boolean29 = strComparableItor21.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        boolean boolean32 = strComparableItor18.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor18.getComparator();
        boolean boolean34 = strComparableItor18.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor14.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor14.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable24 = strComparableItor14.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.lang.Class<?> wildcardClass38 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass27 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor6.getIterators();
        java.lang.Class<?> wildcardClass34 = strComparableItor6.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor34.getIterators();
        boolean boolean37 = strComparableItor34.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor34.getIterators();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        boolean boolean60 = strComparableItor57.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor49.getComparator();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableItor67.hasNext();
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        boolean boolean70 = strComparableItor67.hasNext();
        strComparableItor49.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor67.getIterators();
        boolean boolean74 = strComparableItor67.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor20.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardItorList76);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass14 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor16.getIterators();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor48.getComparator();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableItor66.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        boolean boolean69 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator70 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor66.getComparator();
        strComparableItor27.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator78 = strComparableItor75.getComparator();
        boolean boolean79 = strComparableItor75.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator81 = strComparableItor27.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator70);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardComparator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(wildcardComparator81);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor54.getComparator();
        boolean boolean68 = strComparableItor54.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor70.getComparator();
        boolean boolean84 = strComparableItor70.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator85 = strComparableItor70.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor54.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardComparator83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(wildcardComparator85);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable39 = strComparableItor17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.CharSequence> charSequenceItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.CharSequence>();
        java.lang.Class<?> wildcardClass1 = charSequenceItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass9 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor20.getComparator();
        boolean boolean26 = strComparableItor20.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor27.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor27.getComparator();
        boolean boolean36 = strComparableItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor27.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor27.getComparator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator(strComparableItor36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor29.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor29.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor29.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor56.getIterators();
        boolean boolean62 = strComparableItor56.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor56.getIterators();
        boolean boolean64 = strComparableItor56.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator69 = strComparableItor53.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor53.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertNull(wildcardComparator69);
        org.junit.Assert.assertNotNull(wildcardItorList70);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable43 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator42);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        boolean boolean14 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        boolean boolean16 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass17 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor0.getComparator();
        boolean boolean38 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass39 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.collections4.iterators.CollatingIterator<java.io.Serializable> serializableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.io.Serializable>();
        java.lang.Class<?> wildcardClass1 = serializableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        boolean boolean18 = strComparableItor12.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor12.getIterators();
        boolean boolean20 = strComparableItor12.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor9.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor9.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor9.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor9.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor9.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor12.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass6 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor27.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int35 = strComparableItor27.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        boolean boolean60 = strComparableItor53.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int63 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor35.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor35.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor29.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor29.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor42.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        boolean boolean61 = strComparableItor58.hasNext();
        boolean boolean62 = strComparableItor58.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor58.getComparator();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable66 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardComparator63);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean36 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.lang.Class<?> wildcardClass13 = strComparableItor8.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor80.getIterators();
        boolean boolean86 = strComparableItor80.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor80.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable89 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardItorList87);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        boolean boolean14 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean36 = strComparableItor33.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator38 = strComparableItor25.getComparator();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor25.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean49 = strComparableItor43.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator50 = strComparableItor43.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardComparator38);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator50);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        boolean boolean10 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        boolean boolean14 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass15 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor56.getIterators();
        boolean boolean62 = strComparableItor56.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor56.getIterators();
        boolean boolean64 = strComparableItor56.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator69 = strComparableItor53.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor53.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor53.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertNull(wildcardComparator69);
        org.junit.Assert.assertNotNull(wildcardItorList70);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.lang.Class<?> wildcardClass8 = strComparableItor2.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean57 = strComparableItor41.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int58 = strComparableItor41.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardComparator8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor25.getIterators();
        boolean boolean31 = strComparableItor25.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor25.getIterators();
        boolean boolean33 = strComparableItor25.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor38.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor38.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor38.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor38.getIterators();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor38.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor38.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList47);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor44.getIterators();
        boolean boolean50 = strComparableItor44.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor44.getIterators();
        boolean boolean52 = strComparableItor44.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor41.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor41.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor41.getComparator();
        boolean boolean58 = strComparableItor41.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor17.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator4 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        boolean boolean19 = strComparableItor16.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor8.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor33.getComparator();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        strComparableItor33.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor51.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNull(wildcardComparator4);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass22 = wildcardItorList21.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor20.getComparator();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor20.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable28 = strComparableItor20.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        boolean boolean9 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor16.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        boolean boolean37 = strComparableItor34.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator38 = strComparableItor34.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor34.getComparator();
        boolean boolean40 = strComparableItor34.hasNext();
        strComparableItor16.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor16.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator38);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = strComparableItor27.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass4 = wildcardItorList3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        boolean boolean13 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = wildcardComparator15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean32 = strComparableItor24.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor34.getComparator();
        boolean boolean41 = strComparableItor34.hasNext();
        boolean boolean42 = strComparableItor34.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor24.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        boolean boolean19 = strComparableItor16.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor16.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor16.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor1.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNull(wildcardComparator21);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor56.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable64 = strComparableItor56.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNull(wildcardComparator63);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator4 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardComparator5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator4);
        org.junit.Assert.assertNull(wildcardComparator5);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor29.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor29.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable39 = strComparableItor29.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        boolean boolean19 = strComparableItor16.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        boolean boolean30 = strComparableItor24.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor24.getIterators();
        boolean boolean32 = strComparableItor24.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        boolean boolean35 = strComparableItor21.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable22 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean39 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass40 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor41.getIterators();
        boolean boolean44 = strComparableItor41.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor41.getIterators();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor35.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable49 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean32 = strComparableItor24.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable33 = strComparableItor24.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable12 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor0.getComparator();
        boolean boolean38 = strComparableItor0.hasNext();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator(strComparableItor39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor65.getComparator();
        boolean boolean69 = strComparableItor65.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor17.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable72 = strComparableItor17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator16);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        boolean boolean52 = strComparableItor46.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor46.getIterators();
        boolean boolean54 = strComparableItor46.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor43.getComparator();
        boolean boolean57 = strComparableItor43.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableItor62.hasNext();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor66.getIterators();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        boolean boolean76 = strComparableItor66.hasNext();
        boolean boolean77 = strComparableItor66.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor43.setIterator((int) '4', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        boolean boolean57 = strComparableItor49.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor49.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor49.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor49.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor80.getIterators();
        boolean boolean86 = strComparableItor80.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor80.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable89 = strComparableItor80.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardItorList87);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor20.getIterators();
        java.lang.Class<?> wildcardClass27 = wildcardItorList26.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor3.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable15 = strComparableItor3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor0.hasNext();
        boolean boolean18 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean53 = strComparableItor45.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor55.getIterators();
        boolean boolean58 = strComparableItor55.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor55.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor55.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor45.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList62);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator4 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass5 = strComparableItor0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor20.getComparator();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor20.getComparator();
        java.lang.Class<?> wildcardClass28 = strComparableItor20.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor42.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        boolean boolean61 = strComparableItor58.hasNext();
        boolean boolean62 = strComparableItor58.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor58.getComparator();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = strComparableItor42.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardComparator63);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.lang.Class<?> wildcardClass55 = strComparableItor47.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable29 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean40 = strComparableItor27.hasNext();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor27.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int43 = strComparableItor27.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        boolean boolean18 = strComparableItor12.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor12.getIterators();
        boolean boolean20 = strComparableItor12.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor31.getIterators();
        boolean boolean34 = strComparableItor31.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor31.getIterators();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        boolean boolean57 = strComparableItor49.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor49.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor49.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable61 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor52.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableItor54.hasNext();
        strComparableItor52.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        boolean boolean57 = strComparableItor54.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor60.getIterators();
        boolean boolean63 = strComparableItor60.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor60.getIterators();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableItor71.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor69.getIterators();
        boolean boolean75 = strComparableItor69.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor69.getIterators();
        boolean boolean77 = strComparableItor69.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator80 = strComparableItor66.getComparator();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator82 = strComparableItor46.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor83 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList84 = strComparableItor83.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor83.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor86.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor88 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableItor88.hasNext();
        strComparableItor86.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList91 = strComparableItor86.getIterators();
        boolean boolean92 = strComparableItor86.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList93 = strComparableItor86.getIterators();
        boolean boolean94 = strComparableItor86.hasNext();
        strComparableItor83.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator96 = strComparableItor83.getComparator();
        boolean boolean97 = strComparableItor83.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor83);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNull(wildcardComparator80);
        org.junit.Assert.assertNull(wildcardComparator82);
        org.junit.Assert.assertNotNull(wildcardItorList84);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardItorList91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardItorList93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(wildcardComparator96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.lang.Class<?> wildcardClass26 = strComparableItor20.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass9 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor42.getIterators();
        boolean boolean48 = strComparableItor42.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor42.getIterators();
        boolean boolean50 = strComparableItor42.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor39.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableItor62.hasNext();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        boolean boolean71 = strComparableItor68.hasNext();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor60.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor60.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor76.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableItor78.hasNext();
        strComparableItor76.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator81 = strComparableItor78.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator82 = strComparableItor78.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor78.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor78.getComparator();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        boolean boolean86 = strComparableItor60.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor88 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList89 = strComparableItor88.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList90 = strComparableItor88.getIterators();
        boolean boolean91 = strComparableItor88.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor88.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList93 = strComparableItor88.getIterators();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor29.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardComparator52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertNull(wildcardComparator74);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(wildcardComparator81);
        org.junit.Assert.assertNull(wildcardComparator82);
        org.junit.Assert.assertNull(wildcardComparator83);
        org.junit.Assert.assertNull(wildcardComparator84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardItorList89);
        org.junit.Assert.assertNotNull(wildcardItorList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertNotNull(wildcardItorList93);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable11 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator10);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableItor61.hasNext();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor59.getIterators();
        boolean boolean65 = strComparableItor59.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor59.getIterators();
        boolean boolean67 = strComparableItor59.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator69 = strComparableItor59.getComparator();
        boolean boolean70 = strComparableItor59.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor18.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(wildcardComparator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        boolean boolean66 = strComparableItor63.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator69 = strComparableItor55.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor71.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableItor73.hasNext();
        strComparableItor71.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        boolean boolean76 = strComparableItor73.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator77 = strComparableItor73.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator78 = strComparableItor73.getComparator();
        boolean boolean79 = strComparableItor73.hasNext();
        strComparableItor55.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList82 = strComparableItor55.getIterators();
        boolean boolean83 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor55.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator69);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardComparator77);
        org.junit.Assert.assertNull(wildcardComparator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertNotNull(wildcardItorList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardComparator84);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass15 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardComparator14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor51.getIterators();
        boolean boolean57 = strComparableItor51.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor51.getIterators();
        boolean boolean59 = strComparableItor51.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor48.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableItor64.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableItor72.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor76.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableItor78.hasNext();
        strComparableItor76.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        boolean boolean81 = strComparableItor78.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor70.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor70.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor86.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor88 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableItor88.hasNext();
        strComparableItor86.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor88.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator92 = strComparableItor88.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator93 = strComparableItor88.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator94 = strComparableItor88.getComparator();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        strComparableItor62.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardComparator83);
        org.junit.Assert.assertNull(wildcardComparator84);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNull(wildcardComparator92);
        org.junit.Assert.assertNull(wildcardComparator93);
        org.junit.Assert.assertNull(wildcardComparator94);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor56.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor56.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable65 = strComparableItor56.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertNull(wildcardComparator64);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator4 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertNull(wildcardComparator4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable79 = strComparableItor66.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        boolean boolean37 = strComparableItor34.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        boolean boolean47 = strComparableItor44.hasNext();
        strComparableItor26.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor44.getIterators();
        boolean boolean51 = strComparableItor44.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor44.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        boolean boolean8 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        boolean boolean8 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass9 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator16);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable53 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor22.getIterators();
        boolean boolean25 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        boolean boolean49 = strComparableItor40.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor40.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int51 = strComparableItor40.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor14.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        boolean boolean32 = strComparableItor26.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor26.getIterators();
        boolean boolean34 = strComparableItor26.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor26.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardComparator36);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor8.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor8.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor19.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor19.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator38 = strComparableItor19.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertNull(wildcardComparator38);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator18);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor80.getIterators();
        boolean boolean86 = strComparableItor80.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor80.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList89 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass90 = wildcardItorList89.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertNotNull(wildcardItorList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor24.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable40 = strComparableItor24.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor40.setIterator((int) (byte) 10, strComparableItor50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor0.getIterators();
        boolean boolean27 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass28 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor13.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor35.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor53.getComparator();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor27.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.lang.Class<?> wildcardClass63 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        boolean boolean18 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        boolean boolean30 = strComparableItor24.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor24.getIterators();
        boolean boolean32 = strComparableItor24.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor43.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor43.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableItor61.hasNext();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor61.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator65 = strComparableItor61.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor61.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor61.getComparator();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        strComparableItor35.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        boolean boolean70 = strComparableItor61.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor61.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator65);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor20.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        boolean boolean40 = strComparableItor34.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor34.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor34.getIterators();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor48.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor48.getComparator();
        strComparableItor28.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNull(wildcardComparator52);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass38 = wildcardComparator37.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNull(wildcardComparator37);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        boolean boolean14 = strComparableItor6.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor3.getComparator();
        boolean boolean17 = strComparableItor3.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor3.getComparator();
        boolean boolean19 = strComparableItor3.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        boolean boolean49 = strComparableItor40.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor40.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor40.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        boolean boolean30 = strComparableItor22.hasNext();
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor33.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor33.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor33.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor33.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        boolean boolean66 = strComparableItor63.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor55.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator69 = strComparableItor55.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor71.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableItor73.hasNext();
        strComparableItor71.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor73.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator77 = strComparableItor73.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator78 = strComparableItor73.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor73.getComparator();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor22.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNull(wildcardComparator52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertNull(wildcardComparator69);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNull(wildcardComparator77);
        org.junit.Assert.assertNull(wildcardComparator78);
        org.junit.Assert.assertNull(wildcardComparator79);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor54.getComparator();
        boolean boolean68 = strComparableItor54.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int69 = strComparableItor54.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean39 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator47 = strComparableItor41.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator50 = strComparableItor49.getComparator();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor41.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNull(wildcardComparator47);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNull(wildcardComparator50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        boolean boolean60 = strComparableItor53.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor53.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor53.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardComparator62);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor22.getIterators();
        boolean boolean25 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable29 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNull(wildcardComparator79);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator11 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNull(wildcardComparator11);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable57 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNull(wildcardComparator56);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor13.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor35.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor53.getComparator();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor27.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.lang.Class<?> wildcardClass63 = strComparableItor53.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor14.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor29.getIterators();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor52.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableItor54.hasNext();
        strComparableItor52.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        boolean boolean57 = strComparableItor54.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableItor66.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableItor72.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        boolean boolean75 = strComparableItor72.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator77 = strComparableItor64.getComparator();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        strComparableItor23.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        strComparableItor14.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.lang.Class<?> wildcardClass81 = strComparableItor14.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(wildcardComparator77);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        boolean boolean20 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        boolean boolean23 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor17.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList25);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass10 = wildcardItorList9.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor2.getIterators();
        java.lang.Class<?> wildcardClass19 = wildcardItorList18.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor25.getIterators();
        boolean boolean31 = strComparableItor25.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor25.getIterators();
        boolean boolean33 = strComparableItor25.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor38.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor38.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor38.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor38.getIterators();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor38.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass40 = wildcardItorList39.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        boolean boolean32 = strComparableItor26.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor26.getIterators();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        strComparableItor20.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        boolean boolean58 = strComparableItor55.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        boolean boolean60 = strComparableItor47.hasNext();
        strComparableItor20.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor47.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean40 = strComparableItor37.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor29.getComparator();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        boolean boolean50 = strComparableItor47.hasNext();
        strComparableItor29.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor47.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNull(wildcardComparator54);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor65.getComparator();
        boolean boolean69 = strComparableItor65.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor72.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor75.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableItor77.hasNext();
        strComparableItor75.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor75.getIterators();
        boolean boolean81 = strComparableItor75.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList82 = strComparableItor75.getIterators();
        boolean boolean83 = strComparableItor75.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator85 = strComparableItor72.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor86.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor88 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableItor88.hasNext();
        strComparableItor86.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor17.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertNotNull(wildcardItorList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardComparator85);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor54.getComparator();
        boolean boolean68 = strComparableItor54.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator69 = strComparableItor54.getComparator();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardComparator69);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.lang.Class<?> wildcardClass37 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass16 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor3.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = strComparableItor3.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        boolean boolean8 = strComparableItor2.hasNext();
        boolean boolean9 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor12.getComparator();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor10.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor10.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor10.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor10.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertNull(wildcardComparator30);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.lang.Class<?> wildcardClass17 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean25 = strComparableItor2.hasNext();
        boolean boolean26 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = strComparableItor27.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator12 = strComparableItor1.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardComparator12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNull(wildcardComparator12);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        boolean boolean21 = strComparableItor14.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int23 = strComparableItor14.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNull(wildcardComparator57);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor6.getIterators();
        boolean boolean34 = strComparableItor6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor41.getIterators();
        boolean boolean44 = strComparableItor41.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor41.getIterators();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor35.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean49 = strComparableItor35.hasNext();
        java.lang.Class<?> wildcardClass50 = strComparableItor35.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor16.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor16.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable35 = strComparableItor16.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList34);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable10 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor39.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor39.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor67.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableItor69.hasNext();
        strComparableItor67.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        boolean boolean72 = strComparableItor69.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor61.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor61.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor77.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor79 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableItor79.hasNext();
        strComparableItor77.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator82 = strComparableItor79.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor79.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor79.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator85 = strComparableItor79.getComparator();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(wildcardComparator74);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNotNull(wildcardItorList76);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(wildcardComparator82);
        org.junit.Assert.assertNull(wildcardComparator83);
        org.junit.Assert.assertNull(wildcardComparator84);
        org.junit.Assert.assertNull(wildcardComparator85);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        boolean boolean39 = strComparableItor36.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor28.getComparator();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor28.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor46.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor46.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.reflect.AnnotatedElement> annotatedElementItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.reflect.AnnotatedElement>();
        java.lang.Class<?> wildcardClass1 = annotatedElementItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor17.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass64 = wildcardComparator63.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNull(wildcardComparator63);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        boolean boolean60 = strComparableItor53.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.lang.Class<?> wildcardClass62 = strComparableItor6.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor47.getIterators();
        boolean boolean50 = strComparableItor47.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor47.getIterators();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor47.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.setIterator((int) '4', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList53);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        boolean boolean13 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        boolean boolean13 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        boolean boolean30 = strComparableItor22.hasNext();
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        boolean boolean60 = strComparableItor53.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor6.getComparator();
        boolean boolean63 = strComparableItor6.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int64 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass9 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor7.getIterators();
        boolean boolean13 = strComparableItor7.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor7.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor7.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor7.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor0.getIterators();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', strComparableItor14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        boolean boolean9 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor12.getComparator();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor12.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor12.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor3.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator95 = strComparableItor41.getComparator();
        java.lang.Class<?> wildcardClass96 = strComparableItor41.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertNull(wildcardComparator95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable33 = strComparableItor16.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        boolean boolean47 = strComparableItor44.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor44.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor44.getComparator();
        boolean boolean50 = strComparableItor44.hasNext();
        boolean boolean51 = strComparableItor44.hasNext();
        boolean boolean52 = strComparableItor44.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNull(wildcardComparator18);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        boolean boolean8 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        boolean boolean26 = strComparableItor23.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor6.getIterators();
        java.lang.Class<?> wildcardClass43 = wildcardItorList42.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean40 = strComparableItor27.hasNext();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor27.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor27.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable44 = strComparableItor27.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        boolean boolean26 = strComparableItor0.hasNext();
        boolean boolean27 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean26 = strComparableItor20.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableItor20.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass10 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        boolean boolean40 = strComparableItor34.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor34.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor34.getIterators();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor48.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor48.getComparator();
        strComparableItor28.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNull(wildcardComparator52);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = strComparableItor24.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean56 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor63.getIterators();
        boolean boolean69 = strComparableItor63.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor63.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor63.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor57.getComparator();
        boolean boolean74 = strComparableItor57.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        boolean boolean30 = strComparableItor24.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor24.getIterators();
        boolean boolean32 = strComparableItor24.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor21.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor14.getComparator();
        java.lang.Class<?> wildcardClass21 = strComparableItor14.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.lang.Class<?> wildcardClass57 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        boolean boolean21 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor15.getIterators();
        boolean boolean24 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor15.getIterators();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        boolean boolean41 = strComparableItor35.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor35.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor35.getIterators();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableItor61.hasNext();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        boolean boolean64 = strComparableItor61.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor29.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor15.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int35 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = strComparableItor57.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass19 = wildcardItorList18.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        boolean boolean10 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        boolean boolean21 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor15.getIterators();
        boolean boolean23 = strComparableItor15.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor12.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor33.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator47 = strComparableItor33.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor51.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor51.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor51.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor51.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean59 = strComparableItor33.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean61 = strComparableItor33.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNull(wildcardComparator47);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean42 = strComparableItor39.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        boolean boolean45 = strComparableItor39.hasNext();
        strComparableItor21.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor21.getIterators();
        boolean boolean49 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor54.getIterators();
        boolean boolean60 = strComparableItor54.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor54.getIterators();
        boolean boolean62 = strComparableItor54.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor51.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableItor67.hasNext();
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor65.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.lang.Class<?> wildcardClass84 = strComparableItor65.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass14 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        boolean boolean39 = strComparableItor33.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor33.getIterators();
        strComparableItor27.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean43 = strComparableItor27.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor27.getComparator();
        boolean boolean45 = strComparableItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        boolean boolean26 = strComparableItor0.hasNext();
        boolean boolean27 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass28 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor40.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor40.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNull(wildcardComparator49);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable56 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        boolean boolean6 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable20 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableItor61.hasNext();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableItor67.hasNext();
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        boolean boolean70 = strComparableItor67.hasNext();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator72 = strComparableItor59.getComparator();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor75.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableItor77.hasNext();
        strComparableItor75.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
        boolean boolean80 = strComparableItor77.hasNext();
        strComparableItor59.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor77.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor40.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardComparator72);
        org.junit.Assert.assertNotNull(wildcardItorList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(wildcardComparator83);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = strComparableItor26.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        boolean boolean43 = strComparableItor40.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor32.getComparator();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor32.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean56 = strComparableItor50.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor50.getComparator();
        boolean boolean58 = strComparableItor50.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable60 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        boolean boolean27 = strComparableItor21.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor21.getIterators();
        boolean boolean30 = strComparableItor21.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor21.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator2 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable3 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(wildcardComparator2);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor54.getComparator();
        boolean boolean68 = strComparableItor54.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor69.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableItor74.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor72.getIterators();
        boolean boolean78 = strComparableItor72.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor72.getIterators();
        boolean boolean80 = strComparableItor72.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator82 = strComparableItor69.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor83 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList84 = strComparableItor83.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor85 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean86 = strComparableItor85.hasNext();
        strComparableItor83.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor85);
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor83);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(wildcardComparator82);
        org.junit.Assert.assertNotNull(wildcardItorList84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        boolean boolean21 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor15.getIterators();
        boolean boolean23 = strComparableItor15.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor12.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        boolean boolean50 = strComparableItor47.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor39.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor39.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.lang.Class<?> wildcardClass56 = strComparableItor39.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor6.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int23 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        boolean boolean60 = strComparableItor53.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableItor71.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        boolean boolean74 = strComparableItor71.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor63.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor78.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableItor80.hasNext();
        strComparableItor78.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList83 = strComparableItor78.getIterators();
        boolean boolean84 = strComparableItor78.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor78.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList86 = strComparableItor78.getIterators();
        boolean boolean87 = strComparableItor78.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList88 = strComparableItor78.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList89 = strComparableItor78.getIterators();
        strComparableItor63.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertNotNull(wildcardItorList86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardItorList88);
        org.junit.Assert.assertNotNull(wildcardItorList89);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator12 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable13 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNull(wildcardComparator12);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor65.getComparator();
        boolean boolean69 = strComparableItor65.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableItor74.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor72.getIterators();
        boolean boolean78 = strComparableItor72.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor72.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor72.getIterators();
        boolean boolean81 = strComparableItor72.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = strComparableItor72.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor17.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList31);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 100, strComparableItor19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(wildcardItorList17);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator95 = strComparableItor57.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator96 = strComparableItor57.getComparator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor98 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor57.setIterator(0, strComparableItor98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertNull(wildcardComparator95);
        org.junit.Assert.assertNull(wildcardComparator96);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable32 = strComparableItor24.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        boolean boolean13 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor20.getIterators();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor52.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableItor54.hasNext();
        strComparableItor52.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor52.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableItor60.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        boolean boolean63 = strComparableItor60.hasNext();
        strComparableItor52.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator65 = strComparableItor52.getComparator();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        boolean boolean73 = strComparableItor70.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor70.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor70.getComparator();
        strComparableItor31.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator77 = strComparableItor70.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator65);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(wildcardComparator74);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator77);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        boolean boolean18 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor20.getComparator();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor20.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = wildcardComparator27.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor0.getComparator();
        boolean boolean38 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        boolean boolean34 = strComparableItor28.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor28.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor28.getIterators();
        strComparableItor22.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor22.getIterators();
        strComparableItor0.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable40 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor36.getIterators();
        boolean boolean45 = strComparableItor36.hasNext();
        boolean boolean46 = strComparableItor36.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = strComparableItor36.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        boolean boolean21 = strComparableItor14.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor14.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor23.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor23.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor41.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor41.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor41.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator47 = strComparableItor41.getComparator();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor23.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNull(wildcardComparator47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor57.getComparator();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        boolean boolean86 = strComparableItor57.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable87 = strComparableItor57.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(wildcardComparator84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor6.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable44 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        boolean boolean19 = strComparableItor16.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass17 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = wildcardComparator5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator2 = strComparableItor0.getComparator();
        boolean boolean3 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass4 = strComparableItor0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(wildcardComparator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int23 = strComparableItor14.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        boolean boolean57 = strComparableItor49.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor49.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor49.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor49.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        boolean boolean28 = strComparableItor13.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor13.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        boolean boolean43 = strComparableItor37.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor37.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor37.getIterators();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        boolean boolean66 = strComparableItor63.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor31.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor55.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList70);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        boolean boolean95 = strComparableItor57.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable96 = strComparableItor57.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        boolean boolean21 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor15.getIterators();
        boolean boolean24 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor15.getIterators();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor29.getIterators();
        boolean boolean32 = strComparableItor29.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        boolean boolean30 = strComparableItor22.hasNext();
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor22.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass9 = wildcardItorList8.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        boolean boolean10 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean36 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int37 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass8 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor20.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor50.getIterators();
        boolean boolean56 = strComparableItor50.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor50.getIterators();
        boolean boolean59 = strComparableItor50.hasNext();
        boolean boolean60 = strComparableItor50.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        boolean boolean18 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass20 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        boolean boolean30 = strComparableItor24.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor24.getIterators();
        boolean boolean32 = strComparableItor24.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor49.getIterators();
        strComparableItor43.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor43.getIterators();
        strComparableItor21.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableItor71.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor75.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableItor77.hasNext();
        strComparableItor75.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
        boolean boolean80 = strComparableItor77.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor77);
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor69.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList84 = strComparableItor69.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor69.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor21.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertNotNull(wildcardItorList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(wildcardComparator83);
        org.junit.Assert.assertNotNull(wildcardItorList84);
        org.junit.Assert.assertNotNull(wildcardItorList85);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.lang.Class<?> wildcardClass46 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        boolean boolean19 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor22.getComparator();
        boolean boolean38 = strComparableItor22.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor22.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNotNull(wildcardItorList40);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean36 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor48.getComparator();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableItor66.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        boolean boolean69 = strComparableItor66.hasNext();
        strComparableItor48.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor66.getIterators();
        boolean boolean73 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor66.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(wildcardComparator74);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable9 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        boolean boolean21 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor15.getIterators();
        boolean boolean24 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor15.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor15.getIterators();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable28 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList26);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor3.getComparator();
        boolean boolean14 = strComparableItor3.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor3.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor23.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean44 = strComparableItor41.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor41.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor41.getComparator();
        boolean boolean47 = strComparableItor41.hasNext();
        strComparableItor23.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor23.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor23.getIterators();
        boolean boolean51 = strComparableItor23.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor23.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.setIterator(100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(wildcardComparator52);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable6 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator11 = strComparableItor8.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        boolean boolean25 = strComparableItor19.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor19.getIterators();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        boolean boolean47 = strComparableItor44.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        boolean boolean63 = strComparableItor57.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor57.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor57.getIterators();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableItor76.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor76);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        boolean boolean85 = strComparableItor82.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        boolean boolean89 = strComparableItor51.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable92 = strComparableItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator11);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        boolean boolean49 = strComparableItor21.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        boolean boolean46 = strComparableItor40.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor40.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor40.getIterators();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor41.getIterators();
        boolean boolean44 = strComparableItor41.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor41.getIterators();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.setIterator(10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        boolean boolean60 = strComparableItor53.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable63 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(wildcardComparator62);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableItor62.hasNext();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor60.getIterators();
        boolean boolean66 = strComparableItor60.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor60.getIterators();
        boolean boolean68 = strComparableItor60.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        boolean boolean70 = strComparableItor57.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor57.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor49.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        boolean boolean9 = strComparableItor0.hasNext();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(0, strComparableItor11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean32 = strComparableItor24.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        boolean boolean43 = strComparableItor37.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor37.getIterators();
        boolean boolean45 = strComparableItor37.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor24.setIterator((int) '4', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor56.getIterators();
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor56.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor56.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor56.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable65 = strComparableItor56.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertNull(wildcardComparator63);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor18.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList25);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        boolean boolean2 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int3 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNull(wildcardComparator56);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor47.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor47.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int57 = strComparableItor47.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNull(wildcardComparator56);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean40 = strComparableItor27.hasNext();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        java.lang.Class<?> wildcardClass22 = strComparableItor14.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = strComparableItor14.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass33 = wildcardComparator32.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor49.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        boolean boolean18 = strComparableItor0.hasNext();
        boolean boolean19 = strComparableItor0.hasNext();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(0, strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        boolean boolean57 = strComparableItor41.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor61.getIterators();
        boolean boolean67 = strComparableItor61.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor61.getIterators();
        boolean boolean69 = strComparableItor61.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator72 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor58.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor58.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor58.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor58.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNull(wildcardComparator72);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertNull(wildcardComparator74);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNotNull(wildcardItorList77);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass9 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable21 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        boolean boolean22 = strComparableItor19.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor27.getIterators();
        boolean boolean35 = strComparableItor27.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor40.getIterators();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNotNull(wildcardItorList46);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor80.getIterators();
        boolean boolean86 = strComparableItor80.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor80.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor80.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor90 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList91 = strComparableItor90.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean93 = strComparableItor92.hasNext();
        strComparableItor90.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor92);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator95 = strComparableItor92.getComparator();
        boolean boolean96 = strComparableItor92.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator97 = strComparableItor92.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator98 = strComparableItor92.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNotNull(wildcardItorList91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(wildcardComparator95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(wildcardComparator97);
        org.junit.Assert.assertNull(wildcardComparator98);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean37 = strComparableItor29.hasNext();
        boolean boolean38 = strComparableItor29.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor29.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor42.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        boolean boolean61 = strComparableItor58.hasNext();
        boolean boolean62 = strComparableItor58.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor58.getComparator();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableItor74.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor72.getIterators();
        boolean boolean78 = strComparableItor72.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor72.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor72.getIterators();
        strComparableItor66.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        boolean boolean82 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator83 = strComparableItor66.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList84 = strComparableItor66.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator85 = strComparableItor66.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList86 = strComparableItor66.getIterators();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.lang.Class<?> wildcardClass88 = strComparableItor66.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardComparator63);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(wildcardComparator83);
        org.junit.Assert.assertNotNull(wildcardItorList84);
        org.junit.Assert.assertNull(wildcardComparator85);
        org.junit.Assert.assertNotNull(wildcardItorList86);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        boolean boolean21 = strComparableItor14.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor14.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor17.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int40 = strComparableItor17.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean42 = strComparableItor39.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        boolean boolean45 = strComparableItor39.hasNext();
        strComparableItor21.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor21.getIterators();
        boolean boolean49 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        boolean boolean51 = strComparableItor21.hasNext();
        java.lang.Class<?> wildcardClass52 = strComparableItor21.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass15 = wildcardItorList14.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor19.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor19.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor19.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor19.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableItor19.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNull(wildcardComparator25);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor21.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor39.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor39.getComparator();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean47 = strComparableItor21.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor49.getIterators();
        boolean boolean52 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable20 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        boolean boolean60 = strComparableItor53.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor69.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableItor71.hasNext();
        strComparableItor69.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        boolean boolean74 = strComparableItor71.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor71);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor63.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor77.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor79 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableItor79.hasNext();
        strComparableItor77.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        boolean boolean82 = strComparableItor79.hasNext();
        boolean boolean83 = strComparableItor79.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator84 = strComparableItor79.getComparator();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor79);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor53.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardComparator84);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor14.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator11 = strComparableItor8.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        boolean boolean25 = strComparableItor19.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor19.getIterators();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        boolean boolean47 = strComparableItor44.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        boolean boolean63 = strComparableItor57.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor57.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor57.getIterators();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableItor76.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor76);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        boolean boolean85 = strComparableItor82.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        boolean boolean89 = strComparableItor51.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = strComparableItor8.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator11);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor65.getComparator();
        boolean boolean69 = strComparableItor65.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableItor74.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor72.getIterators();
        boolean boolean78 = strComparableItor72.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor72.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor72.getIterators();
        boolean boolean81 = strComparableItor72.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        java.lang.Class<?> wildcardClass83 = strComparableItor17.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable9 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator16);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor0.getComparator();
        boolean boolean38 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor42.getComparator();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor42.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor42.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNull(wildcardComparator58);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass16 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        boolean boolean10 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        boolean boolean21 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor15.getIterators();
        boolean boolean23 = strComparableItor15.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor12.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor26.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNull(wildcardComparator36);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        boolean boolean9 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        boolean boolean22 = strComparableItor19.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor11.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        boolean boolean31 = strComparableItor27.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor27.getComparator();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        boolean boolean17 = strComparableItor6.hasNext();
        java.lang.Class<?> wildcardClass18 = strComparableItor6.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        boolean boolean8 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor19.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean40 = strComparableItor37.hasNext();
        strComparableItor19.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor37.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor37.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNull(wildcardComparator44);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        boolean boolean18 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor2.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable7 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor26.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator1 = strComparableItor0.getComparator();
        java.lang.Class<?> wildcardClass2 = strComparableItor0.getClass();
        org.junit.Assert.assertNull(wildcardComparator1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        boolean boolean45 = strComparableItor39.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor39.getIterators();
        boolean boolean47 = strComparableItor39.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator50 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor36.getComparator();
        boolean boolean53 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor36.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        boolean boolean56 = strComparableItor36.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int57 = strComparableItor36.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNull(wildcardComparator50);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNull(wildcardComparator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor20.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor20.getComparator();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor0.getIterators();
        boolean boolean27 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        boolean boolean41 = strComparableItor35.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor35.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor35.getIterators();
        strComparableItor29.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor51.getIterators();
        boolean boolean57 = strComparableItor51.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor51.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor51.getIterators();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor45.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor45.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList63);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean36 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        boolean boolean43 = strComparableItor40.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor41.getIterators();
        boolean boolean44 = strComparableItor41.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor41.getIterators();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor35.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean49 = strComparableItor35.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor57.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        boolean boolean78 = strComparableItor75.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor75.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator80 = strComparableItor75.getComparator();
        boolean boolean81 = strComparableItor75.hasNext();
        strComparableItor57.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor35.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNull(wildcardComparator80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int40 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList39);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor54.getComparator();
        boolean boolean68 = strComparableItor54.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor54.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable70 = strComparableItor54.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass40 = wildcardItorList39.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator18);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        boolean boolean30 = strComparableItor22.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor19.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor33.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor33.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor33.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor33.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNotNull(wildcardItorList42);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        boolean boolean10 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator11 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor12.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean42 = strComparableItor39.hasNext();
        strComparableItor21.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor39.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor39.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(wildcardComparator11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList46);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable37 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = strComparableItor8.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        boolean boolean18 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        boolean boolean10 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        boolean boolean20 = strComparableItor14.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor14.getIterators();
        boolean boolean22 = strComparableItor14.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor11.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor11.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        boolean boolean18 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableItor13.hasNext();
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor11.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor11.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor20.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        boolean boolean41 = strComparableItor38.hasNext();
        strComparableItor20.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        strComparableItor11.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor38.getIterators();
        boolean boolean45 = strComparableItor38.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor47.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor47.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        boolean boolean63 = strComparableItor57.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor57.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor57.getIterators();
        boolean boolean66 = strComparableItor57.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor57.getIterators();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableItor74.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor78.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableItor80.hasNext();
        strComparableItor78.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        boolean boolean83 = strComparableItor80.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator85 = strComparableItor72.getComparator();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator87 = strComparableItor72.getComparator();
        boolean boolean88 = strComparableItor72.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor47.setIterator((int) (byte) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(wildcardComparator85);
        org.junit.Assert.assertNull(wildcardComparator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass7 = wildcardItorList6.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        boolean boolean52 = strComparableItor46.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor46.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor46.getIterators();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableItor60.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor60.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor60.getComparator();
        strComparableItor40.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor17.setIterator((int) '#', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardComparator63);
        org.junit.Assert.assertNull(wildcardComparator64);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable21 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        boolean boolean18 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int54 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNull(wildcardComparator53);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor16.getIterators();
        strComparableItor10.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor32.getIterators();
        boolean boolean38 = strComparableItor32.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor32.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor32.getIterators();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor10.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.setIterator((int) ' ', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList43);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        boolean boolean30 = strComparableItor22.hasNext();
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = strComparableItor22.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        boolean boolean30 = strComparableItor24.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor24.getIterators();
        boolean boolean32 = strComparableItor24.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor49.getIterators();
        strComparableItor43.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor43.getIterators();
        strComparableItor21.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable62 = strComparableItor6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList59);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor0.hasNext();
        boolean boolean39 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor44.getIterators();
        boolean boolean50 = strComparableItor44.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor44.getIterators();
        boolean boolean52 = strComparableItor44.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor63.getIterators();
        boolean boolean66 = strComparableItor63.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor63.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        strComparableItor41.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor13.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor35.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor53.getComparator();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor27.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor53.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor53.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
        org.junit.Assert.assertNull(wildcardComparator63);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor17.getIterators();
        boolean boolean40 = strComparableItor17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int41 = strComparableItor17.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        boolean boolean19 = strComparableItor13.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor13.getIterators();
        strComparableItor7.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean23 = strComparableItor7.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor7.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor7.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        boolean boolean17 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        boolean boolean24 = strComparableItor21.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor21.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor21.getComparator();
        boolean boolean27 = strComparableItor21.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean63 = strComparableItor17.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableItor67.hasNext();
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor67);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor65.getIterators();
        boolean boolean71 = strComparableItor65.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor65.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor65.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor65.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor17.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertNull(wildcardComparator74);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean42 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        boolean boolean55 = strComparableItor52.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor44.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor44.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableItor62.hasNext();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator65 = strComparableItor62.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor62.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor62.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor62.getComparator();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor44.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor44.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator65);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNull(wildcardComparator71);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        boolean boolean32 = strComparableItor26.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor26.getIterators();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        boolean boolean58 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor20.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList59);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        boolean boolean26 = strComparableItor0.hasNext();
        boolean boolean27 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int28 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor0.getComparator();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNull(wildcardComparator28);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor56.getIterators();
        boolean boolean62 = strComparableItor56.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor56.getIterators();
        boolean boolean64 = strComparableItor56.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor53.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator69 = strComparableItor53.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor53.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.lang.Class<?> wildcardClass72 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertNull(wildcardComparator69);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int50 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardComparator49);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator11 = strComparableItor8.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        boolean boolean25 = strComparableItor19.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor19.getIterators();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        boolean boolean47 = strComparableItor44.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        boolean boolean63 = strComparableItor57.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor57.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor57.getIterators();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableItor76.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor76);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        boolean boolean85 = strComparableItor82.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        boolean boolean89 = strComparableItor51.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = strComparableItor13.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator11);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor8.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor8.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor18.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor8.setIterator(100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor54.getComparator();
        boolean boolean68 = strComparableItor54.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor54.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor54.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable71 = strComparableItor54.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList70);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor27.getComparator();
        boolean boolean35 = strComparableItor27.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        boolean boolean45 = strComparableItor39.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor39.getIterators();
        boolean boolean47 = strComparableItor39.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor36.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator70 = strComparableItor57.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor57.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator78 = strComparableItor75.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor75.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator80 = strComparableItor75.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator81 = strComparableItor75.getComparator();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        boolean boolean83 = strComparableItor57.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardComparator70);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardComparator78);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNull(wildcardComparator80);
        org.junit.Assert.assertNull(wildcardComparator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor3.getComparator();
        boolean boolean14 = strComparableItor3.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor0.getIterators();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(1, strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass12 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        boolean boolean58 = strComparableItor55.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor47.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor18.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor8.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor8.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable15 = strComparableItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        boolean boolean30 = strComparableItor24.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor24.getIterators();
        boolean boolean32 = strComparableItor24.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor49.getIterators();
        strComparableItor43.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor43.getIterators();
        strComparableItor21.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = strComparableItor6.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList59);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor14.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor14.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor14.getIterators();
        java.lang.Class<?> wildcardClass24 = wildcardItorList23.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        boolean boolean28 = strComparableItor13.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor13.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable30 = strComparableItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator29);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        boolean boolean45 = strComparableItor42.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor50.getIterators();
        boolean boolean56 = strComparableItor50.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor50.getIterators();
        boolean boolean58 = strComparableItor50.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor63.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator67 = strComparableItor63.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor63.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor63.getIterators();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor63.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator72 = strComparableItor63.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNull(wildcardComparator67);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNull(wildcardComparator72);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        boolean boolean7 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        boolean boolean15 = strComparableItor9.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor9.getIterators();
        boolean boolean17 = strComparableItor9.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor9.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor9.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNull(wildcardComparator19);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        boolean boolean34 = strComparableItor28.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor28.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor28.getIterators();
        strComparableItor22.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor22.getIterators();
        strComparableItor0.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable40 = strComparableItor22.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor25.getIterators();
        boolean boolean31 = strComparableItor25.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor25.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor25.getIterators();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor19.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor56.getIterators();
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor56.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor56.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor56.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.lang.Class<?> wildcardClass65 = strComparableItor56.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertNull(wildcardComparator63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableItor44.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor42.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor42.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        boolean boolean61 = strComparableItor58.hasNext();
        boolean boolean62 = strComparableItor58.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor58.getComparator();
        strComparableItor42.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        boolean boolean66 = strComparableItor42.hasNext();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(wildcardComparator63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor2.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass29 = wildcardItorList28.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        boolean boolean2 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int3 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor0.hasNext();
        boolean boolean39 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        boolean boolean52 = strComparableItor46.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor46.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor46.getIterators();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableItor60.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableItor66.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor64.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableItor72.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        boolean boolean75 = strComparableItor72.hasNext();
        strComparableItor64.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        strComparableItor40.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor40.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        boolean boolean2 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor4.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor4.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableItor9.hasNext();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor7.getIterators();
        boolean boolean13 = strComparableItor7.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor7.getIterators();
        boolean boolean15 = strComparableItor7.hasNext();
        strComparableItor4.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor7);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor4.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor4.getIterators();
        boolean boolean19 = strComparableItor4.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor27.getComparator();
        boolean boolean35 = strComparableItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator4 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator4);
        org.junit.Assert.assertNull(wildcardComparator5);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        boolean boolean44 = strComparableItor38.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor38.getIterators();
        boolean boolean46 = strComparableItor38.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor35.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator50 = strComparableItor35.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor35.getComparator();
        boolean boolean52 = strComparableItor35.hasNext();
        boolean boolean53 = strComparableItor35.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor35.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNull(wildcardComparator50);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor17.getIterators();
        boolean boolean24 = strComparableItor17.hasNext();
        boolean boolean25 = strComparableItor17.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor17.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor17.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNull(wildcardComparator27);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor21.getIterators();
        java.lang.Class<?> wildcardClass36 = wildcardItorList35.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        boolean boolean13 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) '#', strComparableItor16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor47.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableItor64.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor62.getIterators();
        boolean boolean68 = strComparableItor62.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor62.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor62.getIterators();
        strComparableItor56.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableItor74.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor78.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableItor80.hasNext();
        strComparableItor78.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList83 = strComparableItor78.getIterators();
        boolean boolean84 = strComparableItor78.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor78.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList86 = strComparableItor78.getIterators();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor90 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor47.addIterator(strComparableItor90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertNotNull(wildcardItorList86);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardComparator10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNull(wildcardComparator10);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass11 = wildcardItorList10.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        boolean boolean14 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass17 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor2.getIterators();
        boolean boolean26 = strComparableItor2.hasNext();
        boolean boolean27 = strComparableItor2.hasNext();
        java.lang.Class<?> wildcardClass28 = strComparableItor2.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        boolean boolean51 = strComparableItor48.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor54.getIterators();
        boolean boolean57 = strComparableItor54.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor54.getIterators();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor63.getIterators();
        boolean boolean69 = strComparableItor63.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor63.getIterators();
        boolean boolean71 = strComparableItor63.hasNext();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor60.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor60.getComparator();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor40.getIterators();
        strComparableItor0.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor40.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertNull(wildcardComparator74);
        org.junit.Assert.assertNotNull(wildcardItorList76);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        boolean boolean30 = strComparableItor24.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor24.getIterators();
        boolean boolean32 = strComparableItor24.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor21.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor49.getIterators();
        strComparableItor43.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor43.getIterators();
        strComparableItor21.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.lang.Class<?> wildcardClass62 = strComparableItor21.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor3.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableItor3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList16);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor0.getComparator();
        boolean boolean17 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        boolean boolean14 = strComparableItor11.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        boolean boolean42 = strComparableItor39.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor31.getComparator();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor31.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor49.getIterators();
        boolean boolean56 = strComparableItor49.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor49.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardComparator57);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        boolean boolean34 = strComparableItor27.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor27.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor27.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable37 = strComparableItor27.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNull(wildcardComparator36);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator26 = strComparableItor13.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor35.getIterators();
        boolean boolean38 = strComparableItor35.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor35.getIterators();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        strComparableItor13.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.lang.Class<?> wildcardClass9 = wildcardItorList8.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        boolean boolean27 = strComparableItor13.hasNext();
        boolean boolean28 = strComparableItor13.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor13.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = strComparableItor13.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator29);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor2.getIterators();
        boolean boolean7 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor16.addIterator(strComparableItor33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableItor15.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor19.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        boolean boolean45 = strComparableItor42.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 0, strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Iterator must not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        boolean boolean21 = strComparableItor18.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor10.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor10.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor10.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNull(wildcardComparator25);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean36 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor0.getIterators();
        boolean boolean38 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor59.getIterators();
        boolean boolean62 = strComparableItor59.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor59.getIterators();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor65.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor65.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor68.getIterators();
        boolean boolean74 = strComparableItor68.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor68.getIterators();
        boolean boolean76 = strComparableItor68.hasNext();
        strComparableItor65.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator78 = strComparableItor65.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor65.getComparator();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardComparator78);
        org.junit.Assert.assertNull(wildcardComparator79);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor47.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.lang.Class<?> wildcardClass49 = strComparableItor14.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor3.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = strComparableItor3.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable10 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        boolean boolean18 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor13.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        boolean boolean39 = strComparableItor33.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor33.getIterators();
        boolean boolean41 = strComparableItor33.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor30.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor44);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor30.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor30.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor30.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableItor64.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor68.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableItor70.hasNext();
        strComparableItor68.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        boolean boolean73 = strComparableItor70.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor62.getComparator();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor78.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableItor80.hasNext();
        strComparableItor78.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        boolean boolean83 = strComparableItor80.hasNext();
        strComparableItor62.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        boolean boolean86 = strComparableItor80.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator87 = strComparableItor80.getComparator();
        boolean boolean88 = strComparableItor80.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNull(wildcardComparator52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(wildcardComparator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor12.getComparator();
        boolean boolean16 = strComparableItor12.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor12.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor35.getComparator();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor49.getIterators();
        strComparableItor43.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor13.setIterator((int) (short) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList57);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        boolean boolean52 = strComparableItor46.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor46.getIterators();
        boolean boolean54 = strComparableItor46.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor43.getComparator();
        boolean boolean57 = strComparableItor43.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable59 = strComparableItor43.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor29.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator38 = strComparableItor29.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        boolean boolean51 = strComparableItor48.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor29.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNull(wildcardComparator38);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor8.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator11 = strComparableItor8.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = wildcardComparator11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNull(wildcardComparator11);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertNull(wildcardComparator10);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableItor42.hasNext();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor42);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        boolean boolean52 = strComparableItor46.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor46.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor46.getIterators();
        strComparableItor40.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor40.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableItor60.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor60.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor60.getComparator();
        strComparableItor40.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor60);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator66 = strComparableItor40.getComparator();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.lang.Class<?> wildcardClass68 = strComparableItor40.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(wildcardComparator63);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable9 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableItor0.hasNext();
        boolean boolean2 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        boolean boolean14 = strComparableItor6.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator16 = strComparableItor3.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor3.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor3.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor3.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableItor37.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor37);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        boolean boolean46 = strComparableItor43.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor51.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableItor53.hasNext();
        strComparableItor51.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean56 = strComparableItor53.hasNext();
        strComparableItor35.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor53.getComparator();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNull(wildcardComparator25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.collections4.iterators.CollatingIterator<java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>>> wildcardItorListItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>>>();
        java.lang.Class<?> wildcardClass1 = wildcardItorListItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean33 = strComparableItor27.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor35.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor35.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        boolean boolean44 = strComparableItor38.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor38.getIterators();
        boolean boolean46 = strComparableItor38.hasNext();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator48 = strComparableItor35.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        boolean boolean66 = strComparableItor63.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator69 = strComparableItor55.getComparator();
        strComparableItor35.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        boolean boolean71 = strComparableItor35.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator72 = strComparableItor35.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(wildcardComparator48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(wildcardComparator72);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Class<?>> wildcardClassItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Class<?>>();
        java.lang.Class<?> wildcardClass1 = wildcardClassItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor3.getComparator();
        boolean boolean14 = strComparableItor3.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor3.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor20.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor3.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean42 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        boolean boolean53 = strComparableItor47.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor47.getIterators();
        boolean boolean55 = strComparableItor47.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor44.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableItor62.hasNext();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor60.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor66.getIterators();
        boolean boolean69 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor66.getIterators();
        strComparableItor60.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor44.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardItorList65);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList70);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList41 = strComparableItor36.getIterators();
        boolean boolean42 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor36.getIterators();
        boolean boolean44 = strComparableItor36.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        boolean boolean47 = strComparableItor33.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor49.getIterators();
        boolean boolean55 = strComparableItor49.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor49.getIterators();
        boolean boolean57 = strComparableItor49.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator58 = strComparableItor49.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator59 = strComparableItor49.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNull(wildcardComparator59);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor6.hasNext();
        boolean boolean17 = strComparableItor6.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor19.getIterators();
        boolean boolean22 = strComparableItor19.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor19.getIterators();
        boolean boolean25 = strComparableItor19.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor19.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor19.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor6.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        boolean boolean25 = strComparableItor18.hasNext();
        boolean boolean26 = strComparableItor18.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor18.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor17.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = strComparableItor17.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor40.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable50 = strComparableItor40.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNull(wildcardComparator49);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor7.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableItor11.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor11);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor9.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean20 = strComparableItor17.hasNext();
        strComparableItor9.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor9.getComparator();
        strComparableItor7.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor9);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableItor27.hasNext();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        boolean boolean30 = strComparableItor27.hasNext();
        strComparableItor9.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor27.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor27.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        boolean boolean45 = strComparableItor39.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor39.getIterators();
        boolean boolean47 = strComparableItor39.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor36.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor52 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableItor52.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor52);
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator70 = strComparableItor57.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor57.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator78 = strComparableItor75.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor75.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator80 = strComparableItor75.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator81 = strComparableItor75.getComparator();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        boolean boolean83 = strComparableItor57.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor85 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList86 = strComparableItor85.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor85.getIterators();
        boolean boolean88 = strComparableItor85.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList89 = strComparableItor85.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList90 = strComparableItor85.getIterators();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor85);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator92 = strComparableItor85.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor27.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(wildcardComparator70);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(wildcardComparator78);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNull(wildcardComparator80);
        org.junit.Assert.assertNull(wildcardComparator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardItorList86);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardItorList89);
        org.junit.Assert.assertNotNull(wildcardItorList90);
        org.junit.Assert.assertNull(wildcardComparator92);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableItor28.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        boolean boolean31 = strComparableItor28.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor20.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean36 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable38 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(wildcardComparator37);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable21 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        boolean boolean23 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor17.getIterators();
        boolean boolean25 = strComparableItor17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (byte) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        boolean boolean18 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor2.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor2.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        boolean boolean39 = strComparableItor36.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor28.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList50 = strComparableItor49.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableItor51.hasNext();
        strComparableItor49.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        boolean boolean54 = strComparableItor51.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor51);
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor28.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList59 = strComparableItor58.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor58.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor61.getIterators();
        boolean boolean67 = strComparableItor61.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor61.getIterators();
        boolean boolean69 = strComparableItor61.hasNext();
        strComparableItor58.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator71 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator72 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator73 = strComparableItor58.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor58.getComparator();
        boolean boolean75 = strComparableItor58.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList76 = strComparableItor58.getIterators();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor28.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertNotNull(wildcardItorList50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertNotNull(wildcardItorList59);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator71);
        org.junit.Assert.assertNull(wildcardComparator72);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertNull(wildcardComparator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList76);
        org.junit.Assert.assertNotNull(wildcardItorList78);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        boolean boolean9 = strComparableItor0.hasNext();
        java.lang.Class<?> wildcardClass10 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean5 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator6 = strComparableItor2.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator7 = strComparableItor2.getComparator();
        boolean boolean8 = strComparableItor2.hasNext();
        boolean boolean9 = strComparableItor2.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableItor12.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor10.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        boolean boolean21 = strComparableItor18.hasNext();
        strComparableItor10.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator33 = strComparableItor29.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator34 = strComparableItor29.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor29.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator37 = strComparableItor0.getComparator();
        boolean boolean38 = strComparableItor0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int39 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNull(wildcardComparator33);
        org.junit.Assert.assertNull(wildcardComparator34);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNull(wildcardComparator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor2.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator8 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor2.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = strComparableItor2.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(wildcardItorList9);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = strComparableItor54.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        boolean boolean33 = strComparableItor30.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor22.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator36 = strComparableItor22.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator44 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor40.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator46 = strComparableItor40.getComparator();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor40.getComparator();
        java.lang.Class<?> wildcardClass50 = strComparableItor40.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNull(wildcardComparator36);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNull(wildcardComparator44);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor13.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor13.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        boolean boolean22 = strComparableItor16.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor16.getIterators();
        boolean boolean24 = strComparableItor16.hasNext();
        strComparableItor13.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor13);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = strComparableItor0.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable26 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.lang.Class<?> wildcardClass26 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean27 = strComparableItor24.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator28 = strComparableItor24.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator29 = strComparableItor24.getComparator();
        boolean boolean30 = strComparableItor24.hasNext();
        strComparableItor6.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor6.getIterators();
        boolean boolean34 = strComparableItor6.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor6.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass36 = wildcardComparator35.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(wildcardComparator28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        boolean boolean52 = strComparableItor49.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator54 = strComparableItor41.getComparator();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        boolean boolean68 = strComparableItor65.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor70.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList72 = strComparableItor70.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList74 = strComparableItor73.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableItor75.hasNext();
        strComparableItor73.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor75);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList78 = strComparableItor73.getIterators();
        boolean boolean79 = strComparableItor73.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList80 = strComparableItor73.getIterators();
        boolean boolean81 = strComparableItor73.hasNext();
        strComparableItor70.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor73);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor70);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor84.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableItor86.hasNext();
        strComparableItor84.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator89 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator90 = strComparableItor86.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator91 = strComparableItor86.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor86.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor86);
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        boolean boolean95 = strComparableItor57.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor57.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(wildcardComparator54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList72);
        org.junit.Assert.assertNotNull(wildcardItorList74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardItorList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardItorList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator89);
        org.junit.Assert.assertNull(wildcardComparator90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        boolean boolean30 = strComparableItor22.hasNext();
        strComparableItor14.setIterator((int) (short) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable32 = strComparableItor14.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor21.getIterators();
        boolean boolean28 = strComparableItor21.hasNext();
        boolean boolean29 = strComparableItor21.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor21.getComparator();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor21.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((-1), (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        boolean boolean17 = strComparableItor0.hasNext();
        boolean boolean18 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList19);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator55 = strComparableItor47.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableItor58.hasNext();
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor58);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableItor64.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor62.getIterators();
        boolean boolean68 = strComparableItor62.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor62.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor62.getIterators();
        strComparableItor56.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableItor74.hasNext();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList77 = strComparableItor72.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor78.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableItor80.hasNext();
        strComparableItor78.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList83 = strComparableItor78.getIterators();
        boolean boolean84 = strComparableItor78.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor78.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList86 = strComparableItor78.getIterators();
        strComparableItor72.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor78);
        strComparableItor56.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor72);
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor91 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList92 = strComparableItor91.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor93 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean94 = strComparableItor93.hasNext();
        strComparableItor91.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor93);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList96 = strComparableItor91.getIterators();
        boolean boolean97 = strComparableItor91.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor47.setIterator((int) 'a', (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNull(wildcardComparator55);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardItorList77);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardItorList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertNotNull(wildcardItorList86);
        org.junit.Assert.assertNotNull(wildcardItorList92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardItorList96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        boolean boolean18 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor2.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor2.getIterators();
        java.lang.Class<?> wildcardClass21 = wildcardItorList20.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        boolean boolean35 = strComparableItor32.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        boolean boolean39 = strComparableItor24.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor41.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableItor43.hasNext();
        strComparableItor41.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor41.getIterators();
        boolean boolean47 = strComparableItor41.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor41.getIterators();
        boolean boolean49 = strComparableItor41.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator50 = strComparableItor41.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor24.setIterator((int) (byte) -1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator50);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableItor22.hasNext();
        strComparableItor20.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor20.getIterators();
        boolean boolean26 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor20.getIterators();
        boolean boolean28 = strComparableItor20.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator30 = strComparableItor17.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor31.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableItor33.hasNext();
        strComparableItor31.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor33);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableItor39.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList42 = strComparableItor37.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor50.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor50.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor53 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor53.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableItor55.hasNext();
        strComparableItor53.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor53.getIterators();
        boolean boolean59 = strComparableItor53.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor53.getIterators();
        boolean boolean61 = strComparableItor53.hasNext();
        strComparableItor50.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor53);
        strComparableItor37.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean64 = strComparableItor50.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor66 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor66.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableItor68.hasNext();
        strComparableItor66.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor68);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor66.getIterators();
        boolean boolean72 = strComparableItor66.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor66.getIterators();
        boolean boolean74 = strComparableItor66.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator75 = strComparableItor66.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator76 = strComparableItor66.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor66);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator79 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor80.getIterators();
        boolean boolean86 = strComparableItor80.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor80.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        java.lang.Class<?> wildcardClass89 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator30);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardItorList42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertNull(wildcardComparator76);
        org.junit.Assert.assertNull(wildcardComparator79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableItor34.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor34);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor32.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        boolean boolean43 = strComparableItor40.hasNext();
        strComparableItor32.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator45 = strComparableItor32.getComparator();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList49 = strComparableItor48.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor50 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableItor50.hasNext();
        strComparableItor48.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean53 = strComparableItor50.hasNext();
        strComparableItor32.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        boolean boolean56 = strComparableItor50.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator57 = strComparableItor50.getComparator();
        boolean boolean58 = strComparableItor50.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor50);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableItor63.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList66 = strComparableItor61.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor67.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor69 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableItor69.hasNext();
        strComparableItor67.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        boolean boolean72 = strComparableItor69.hasNext();
        strComparableItor61.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor69);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator74 = strComparableItor61.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor61.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor50.setIterator((int) (byte) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(wildcardComparator45);
        org.junit.Assert.assertNotNull(wildcardItorList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardComparator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardItorList66);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(wildcardComparator74);
        org.junit.Assert.assertNotNull(wildcardItorList75);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator18 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList31 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableItor32.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor32);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor30.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableItor38.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        boolean boolean41 = strComparableItor38.hasNext();
        strComparableItor30.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator43 = strComparableItor30.getComparator();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        boolean boolean51 = strComparableItor48.hasNext();
        strComparableItor30.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        boolean boolean54 = strComparableItor48.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(wildcardComparator43);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList25 = strComparableItor24.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableItor26.hasNext();
        strComparableItor24.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        boolean boolean29 = strComparableItor26.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator31 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator32 = strComparableItor18.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor34.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableItor36.hasNext();
        strComparableItor34.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator41 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor36.getComparator();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor18.getIterators();
        strComparableItor0.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList48 = strComparableItor47.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableItor49.hasNext();
        strComparableItor47.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor49);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList52 = strComparableItor47.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor47.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList57 = strComparableItor56.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor56.getIterators();
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor56.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor56.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator62 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator63 = strComparableItor56.getComparator();
        strComparableItor18.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList65 = strComparableItor56.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable66 = strComparableItor56.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator41);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardItorList52);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardItorList57);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertNull(wildcardComparator63);
        org.junit.Assert.assertNotNull(wildcardItorList65);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor6.getIterators();
        boolean boolean9 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.lang.Class<?> wildcardClass12 = strComparableItor6.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        boolean boolean38 = strComparableItor17.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor17.getIterators();
        boolean boolean40 = strComparableItor17.hasNext();
        boolean boolean41 = strComparableItor17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = strComparableItor17.getIteratorIndex();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value has been returned yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        boolean boolean23 = strComparableItor20.hasNext();
        strComparableItor2.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator25 = strComparableItor20.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable26 = strComparableItor20.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator25);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator20 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableItor23.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor21.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        boolean boolean32 = strComparableItor29.hasNext();
        strComparableItor21.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator35 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList37 = strComparableItor36.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor36.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        boolean boolean45 = strComparableItor39.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor39.getIterators();
        boolean boolean47 = strComparableItor39.hasNext();
        strComparableItor36.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator49 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator50 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor36.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator52 = strComparableItor36.getComparator();
        boolean boolean53 = strComparableItor36.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor36.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor36);
        boolean boolean56 = strComparableItor36.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable57 = strComparableItor36.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(wildcardComparator35);
        org.junit.Assert.assertNotNull(wildcardItorList37);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNull(wildcardComparator50);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNull(wildcardComparator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList18 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableItor19.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor19);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor17.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableItor25.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor25);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor23.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        boolean boolean34 = strComparableItor31.hasNext();
        strComparableItor23.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor23);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList39 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableItor40.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor40);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList43 = strComparableItor38.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor44 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor44.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableItor46.hasNext();
        strComparableItor44.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        boolean boolean49 = strComparableItor46.hasNext();
        strComparableItor38.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator51 = strComparableItor38.getComparator();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor38);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList55 = strComparableItor54.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableItor56.hasNext();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        boolean boolean59 = strComparableItor56.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator60 = strComparableItor56.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator61 = strComparableItor56.getComparator();
        strComparableItor17.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor56);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor65.getComparator();
        boolean boolean69 = strComparableItor65.hasNext();
        strComparableItor17.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable71 = strComparableItor65.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertNotNull(wildcardItorList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardItorList43);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertNotNull(wildcardItorList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(wildcardComparator60);
        org.junit.Assert.assertNull(wildcardComparator61);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor1 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor1.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableItor3.hasNext();
        strComparableItor1.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor1.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor1.getIterators();
        boolean boolean8 = strComparableItor1.hasNext();
        boolean boolean9 = strComparableItor1.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator10 = strComparableItor1.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor1);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList12 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(wildcardComparator10);
        org.junit.Assert.assertNotNull(wildcardItorList12);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableItor14.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        boolean boolean17 = strComparableItor14.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor20.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor20.getIterators();
        boolean boolean23 = strComparableItor20.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor20.getIterators();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor26.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor26.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor29.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableItor31.hasNext();
        strComparableItor29.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor31);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor29.getIterators();
        boolean boolean35 = strComparableItor29.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor29.getIterators();
        boolean boolean37 = strComparableItor29.hasNext();
        strComparableItor26.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator39 = strComparableItor26.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor26.getComparator();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor26);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator42 = strComparableItor6.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList45 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList47 = strComparableItor46.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor48 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableItor48.hasNext();
        strComparableItor46.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor48);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor46.getIterators();
        boolean boolean52 = strComparableItor46.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList53 = strComparableItor46.getIterators();
        boolean boolean54 = strComparableItor46.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor46);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator56 = strComparableItor43.getComparator();
        boolean boolean57 = strComparableItor43.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor43);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor59.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor59.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList63 = strComparableItor62.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor64 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableItor64.hasNext();
        strComparableItor62.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor64);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList67 = strComparableItor62.getIterators();
        boolean boolean68 = strComparableItor62.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList69 = strComparableItor62.getIterators();
        boolean boolean70 = strComparableItor62.hasNext();
        strComparableItor59.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator72 = strComparableItor62.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator39);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNull(wildcardComparator42);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList45);
        org.junit.Assert.assertNotNull(wildcardItorList47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardItorList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(wildcardComparator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertNotNull(wildcardItorList63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardItorList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardItorList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(wildcardComparator72);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        boolean boolean6 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList8);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList21 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList27 = strComparableItor22.getIterators();
        boolean boolean28 = strComparableItor22.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor22.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList30 = strComparableItor22.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList40 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableItor41.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor41);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor39.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList46 = strComparableItor45.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableItor47.hasNext();
        strComparableItor45.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        boolean boolean50 = strComparableItor47.hasNext();
        strComparableItor39.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor47);
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator53 = strComparableItor39.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList54 = strComparableItor39.getIterators();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor39);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList58 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableItor59.hasNext();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor59);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList62 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList64 = strComparableItor63.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableItor65.hasNext();
        strComparableItor63.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor65);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList68 = strComparableItor63.getIterators();
        boolean boolean69 = strComparableItor63.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList70 = strComparableItor63.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList71 = strComparableItor63.getIterators();
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor63);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList73 = strComparableItor57.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList75 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableItor76.hasNext();
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor76);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList79 = strComparableItor74.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList81 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor82 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableItor82.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor82);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList85 = strComparableItor80.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList87 = strComparableItor86.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor88 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableItor88.hasNext();
        strComparableItor86.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        boolean boolean91 = strComparableItor88.hasNext();
        strComparableItor80.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor88);
        strComparableItor74.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor80);
        strComparableItor57.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor74);
        boolean boolean95 = strComparableItor57.hasNext();
        boolean boolean96 = strComparableItor57.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator97 = strComparableItor57.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor16.setIterator((int) (short) 10, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardItorList21);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertNotNull(wildcardItorList30);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardItorList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertNotNull(wildcardItorList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(wildcardComparator53);
        org.junit.Assert.assertNotNull(wildcardItorList54);
        org.junit.Assert.assertNotNull(wildcardItorList58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardItorList62);
        org.junit.Assert.assertNotNull(wildcardItorList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardItorList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardItorList70);
        org.junit.Assert.assertNotNull(wildcardItorList71);
        org.junit.Assert.assertNotNull(wildcardItorList73);
        org.junit.Assert.assertNotNull(wildcardItorList75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardItorList79);
        org.junit.Assert.assertNotNull(wildcardItorList81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardItorList85);
        org.junit.Assert.assertNotNull(wildcardItorList87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(wildcardComparator97);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList11 = strComparableItor6.getIterators();
        boolean boolean12 = strComparableItor6.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor6.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor6.getIterators();
        strComparableItor0.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor6);
        boolean boolean16 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        boolean boolean18 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor19.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableItor21.hasNext();
        strComparableItor19.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
        boolean boolean24 = strComparableItor21.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        boolean boolean3 = strComparableItor0.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor0.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator5 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No value can be removed at present");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor6.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableItor8.hasNext();
        strComparableItor6.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        boolean boolean11 = strComparableItor8.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor8);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator14 = strComparableItor0.getComparator();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList17 = strComparableItor16.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableItor18.hasNext();
        strComparableItor16.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator21 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator22 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator23 = strComparableItor18.getComparator();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator24 = strComparableItor18.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor18);
        java.lang.Class<?> wildcardClass26 = strComparableItor18.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertNotNull(wildcardItorList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator21);
        org.junit.Assert.assertNull(wildcardComparator22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor2.getComparator();
        boolean boolean18 = strComparableItor2.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator19 = strComparableItor2.getComparator();
        boolean boolean20 = strComparableItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable21 = strComparableItor2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableItor2.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList5 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList6 = strComparableItor0.getIterators();
        boolean boolean7 = strComparableItor0.hasNext();
        boolean boolean8 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator9 = strComparableItor0.getComparator();
        boolean boolean10 = strComparableItor0.hasNext();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList13 = strComparableItor12.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList14 = strComparableItor12.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList16 = strComparableItor15.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor17 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableItor17.hasNext();
        strComparableItor15.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor17);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor15.getIterators();
        boolean boolean21 = strComparableItor15.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList22 = strComparableItor15.getIterators();
        boolean boolean23 = strComparableItor15.hasNext();
        strComparableItor12.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor15);
        boolean boolean25 = strComparableItor12.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor12.getIterators();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator27 = strComparableItor12.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableItor0.setIterator((int) (short) 100, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Can't do that after next or hasNext has been called.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardItorList5);
        org.junit.Assert.assertNotNull(wildcardItorList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardItorList13);
        org.junit.Assert.assertNotNull(wildcardItorList14);
        org.junit.Assert.assertNotNull(wildcardItorList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNull(wildcardComparator27);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList3 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableItor4.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor4);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList7 = strComparableItor2.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList9 = strComparableItor8.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableItor10.hasNext();
        strComparableItor8.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        boolean boolean13 = strComparableItor10.hasNext();
        strComparableItor2.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor10);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator15 = strComparableItor2.getComparator();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor2);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator17 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList19 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableItor20.hasNext();
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor20);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor18.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList24 = strComparableItor18.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList26 = strComparableItor25.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList28 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableItor29.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor29);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList32 = strComparableItor27.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList34 = strComparableItor33.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor35 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableItor35.hasNext();
        strComparableItor33.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        boolean boolean38 = strComparableItor35.hasNext();
        strComparableItor27.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor35);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator40 = strComparableItor27.getComparator();
        strComparableItor25.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor27);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor43 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList44 = strComparableItor43.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableItor45.hasNext();
        strComparableItor43.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        boolean boolean48 = strComparableItor45.hasNext();
        strComparableItor27.setIterator(0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        strComparableItor18.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList51 = strComparableItor45.getIterators();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor45);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList56 = strComparableItor55.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableItor57.hasNext();
        strComparableItor55.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor57);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList60 = strComparableItor55.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList61 = strComparableItor55.getIterators();
        boolean boolean62 = strComparableItor55.hasNext();
        boolean boolean63 = strComparableItor55.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator64 = strComparableItor55.getComparator();
        strComparableItor54.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor55);
        strComparableItor0.setIterator(1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor54);
        boolean boolean67 = strComparableItor0.hasNext();
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator68 = strComparableItor0.getComparator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable69 = strComparableItor0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardItorList7);
        org.junit.Assert.assertNotNull(wildcardItorList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(wildcardComparator15);
        org.junit.Assert.assertNull(wildcardComparator17);
        org.junit.Assert.assertNotNull(wildcardItorList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertNotNull(wildcardItorList24);
        org.junit.Assert.assertNotNull(wildcardItorList26);
        org.junit.Assert.assertNotNull(wildcardItorList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardItorList32);
        org.junit.Assert.assertNotNull(wildcardItorList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertNotNull(wildcardItorList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardItorList51);
        org.junit.Assert.assertNotNull(wildcardItorList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardItorList60);
        org.junit.Assert.assertNotNull(wildcardItorList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(wildcardComparator64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(wildcardComparator68);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList1 = strComparableItor0.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList2 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList4 = strComparableItor3.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableItor5.hasNext();
        strComparableItor3.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor5);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList8 = strComparableItor3.getIterators();
        boolean boolean9 = strComparableItor3.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList10 = strComparableItor3.getIterators();
        boolean boolean11 = strComparableItor3.hasNext();
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor3);
        java.util.Comparator<? super java.lang.Comparable<java.lang.String>> wildcardComparator13 = strComparableItor0.getComparator();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList15 = strComparableItor14.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableItor16.hasNext();
        strComparableItor14.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor16);
        strComparableItor0.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor14);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList20 = strComparableItor0.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList23 = strComparableItor22.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableItor24.hasNext();
        strComparableItor22.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor24);
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList29 = strComparableItor28.getIterators();
        org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = new org.apache.commons.collections4.iterators.CollatingIterator<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableItor30.hasNext();
        strComparableItor28.addIterator((java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor30);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList33 = strComparableItor28.getIterators();
        boolean boolean34 = strComparableItor28.hasNext();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList35 = strComparableItor28.getIterators();
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList36 = strComparableItor28.getIterators();
        strComparableItor22.setIterator((int) (byte) 0, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor28);
        java.util.List<java.util.Iterator<? extends java.lang.Comparable<java.lang.String>>> wildcardItorList38 = strComparableItor22.getIterators();
        strComparableItor0.setIterator((int) (short) 1, (java.util.Iterator<java.lang.Comparable<java.lang.String>>) strComparableItor22);
        java.lang.Class<?> wildcardClass40 = strComparableItor0.getClass();
        org.junit.Assert.assertNotNull(wildcardItorList1);
        org.junit.Assert.assertNotNull(wildcardItorList2);
        org.junit.Assert.assertNotNull(wildcardItorList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardItorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardItorList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(wildcardComparator13);
        org.junit.Assert.assertNotNull(wildcardItorList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardItorList20);
        org.junit.Assert.assertNotNull(wildcardItorList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardItorList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardItorList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardItorList35);
        org.junit.Assert.assertNotNull(wildcardItorList36);
        org.junit.Assert.assertNotNull(wildcardItorList38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }
}

