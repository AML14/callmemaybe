[
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "defaultIterativeClassifierString()",
    "name": "defaultIterativeClassifierString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "defaultIterativeClassifierString()",
      "comment": "String describing default classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "useAverageTipText()",
    "name": "useAverageTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "useAverageTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getUseAverage()",
    "name": "getUseAverage",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getUseAverage()",
      "comment": "Get the value of UseAverage.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setUseAverage(boolean newUseAverage)",
    "name": "setUseAverage",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newUseAverage"
      }
    ],
    "protocol": {
      "member": "setUseAverage(boolean newUseAverage)",
      "comment": "Set the value of UseAverage.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numThreadsTipText()",
    "name": "numThreadsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numThreadsTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNumThreads()",
    "name": "getNumThreads",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNumThreads()",
      "comment": "Gets the number of threads.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNumThreads(int nT)",
    "name": "setNumThreads",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "nT"
      }
    ],
    "protocol": {
      "member": "setNumThreads(int nT)",
      "comment": "Sets the number of threads",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "poolSizeTipText()",
    "name": "poolSizeTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "poolSizeTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getPoolSize()",
    "name": "getPoolSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getPoolSize()",
      "comment": "Gets the number of threads.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setPoolSize(int nT)",
    "name": "setPoolSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "nT"
      }
    ],
    "protocol": {
      "member": "setPoolSize(int nT)",
      "comment": "Sets the number of threads",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "stepSizeTipText()",
    "name": "stepSizeTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "stepSizeTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getStepSize()",
    "name": "getStepSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getStepSize()",
      "comment": "Get the value of StepSize.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setStepSize(int newStepSize)",
    "name": "setStepSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newStepSize"
      }
    ],
    "protocol": {
      "member": "setStepSize(int newStepSize)",
      "comment": "Set the value of StepSize.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numRunsTipText()",
    "name": "numRunsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numRunsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNumRuns()",
    "name": "getNumRuns",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNumRuns()",
      "comment": "Get the value of NumRuns.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNumRuns(int newNumRuns)",
    "name": "setNumRuns",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newNumRuns"
      }
    ],
    "protocol": {
      "member": "setNumRuns(int newNumRuns)",
      "comment": "Set the value of NumRuns.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numFoldsTipText()",
    "name": "numFoldsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numFoldsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNumFolds()",
    "name": "getNumFolds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNumFolds()",
      "comment": "Get the value of NumFolds.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNumFolds(int newNumFolds)",
    "name": "setNumFolds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newNumFolds"
      }
    ],
    "protocol": {
      "member": "setNumFolds(int newNumFolds)",
      "comment": "Set the value of NumFolds.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lookAheadIterationsTipText()",
    "name": "lookAheadIterationsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "lookAheadIterationsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLookAheadIterations()",
    "name": "getLookAheadIterations",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLookAheadIterations()",
      "comment": "Get the value of LookAheadIterations.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setLookAheadIterations(int newLookAheadIterations)",
    "name": "setLookAheadIterations",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newLookAheadIterations"
      }
    ],
    "protocol": {
      "member": "setLookAheadIterations(int newLookAheadIterations)",
      "comment": "Set the value of LookAheadIterations.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances data)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances data)",
      "comment": "Builds the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance inst)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "inst"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance inst)",
      "comment": "Returns the class distribution for an instance.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Returns a string describing the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options. Valid options are:  -W classname <br> Specify the full class name of the base learner.  Options after -- are passed to the designated classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getIterativeClassifier(java.lang.String name, java.lang.String[] options)",
    "name": "getIterativeClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.IterativeClassifier",
      "name": "weka.classifiers.IterativeClassifier",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "getIterativeClassifier(java.lang.String name, java.lang.String[] options)",
      "comment": "Get classifier for string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the Classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "evaluationMetricTipText()",
    "name": "evaluationMetricTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "evaluationMetricTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setEvaluationMetric(weka.core.SelectedTag metric)",
    "name": "setEvaluationMetric",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.SelectedTag",
          "name": "SelectedTag",
          "isArray": false
        },
        "name": "metric"
      }
    ],
    "protocol": {
      "member": "setEvaluationMetric(weka.core.SelectedTag metric)",
      "comment": "Set the evaluation metric to use",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEvaluationMetric()",
    "name": "getEvaluationMetric",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.SelectedTag",
      "name": "weka.core.SelectedTag",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getEvaluationMetric()",
      "comment": "Get the evaluation metric to use",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "classValueIndexTipText()",
    "name": "classValueIndexTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "classValueIndexTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setClassValueIndex(int i)",
    "name": "setClassValueIndex",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "protocol": {
      "member": "setClassValueIndex(int i)",
      "comment": "Set the class value index to use",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassValueIndex()",
    "name": "getClassValueIndex",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getClassValueIndex()",
      "comment": "Get the class value index to use",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "iterativeClassifierTipText()",
    "name": "iterativeClassifierTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "iterativeClassifierTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns default capabilities of the base classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setIterativeClassifier(weka.classifiers.IterativeClassifier newIterativeClassifier)",
    "name": "setIterativeClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.classifiers.IterativeClassifier",
          "name": "IterativeClassifier",
          "isArray": false
        },
        "name": "newIterativeClassifier"
      }
    ],
    "protocol": {
      "member": "setIterativeClassifier(weka.classifiers.IterativeClassifier newIterativeClassifier)",
      "comment": "Set the base learner.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getIterativeClassifier()",
    "name": "getIterativeClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.IterativeClassifier",
      "name": "weka.classifiers.IterativeClassifier",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getIterativeClassifier()",
      "comment": "Get the classifier used as the base learner.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getIterativeClassifierSpec()",
    "name": "getIterativeClassifierSpec",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getIterativeClassifierSpec()",
      "comment": "Gets the classifier specification string, which contains the class name of the classifier and any options to the classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "measureBestNumIts()",
    "name": "measureBestNumIts",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "measureBestNumIts()",
      "comment": "Returns the best number of iterations",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "measureBestVal()",
    "name": "measureBestVal",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "measureBestVal()",
      "comment": "Returns the measure for the best model",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "enumerateMeasures()",
    "name": "enumerateMeasures",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<java.lang.String>",
      "name": "java.util.Enumeration<java.lang.String>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "enumerateMeasures()",
      "comment": "Returns an enumeration of the additional measure names",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMeasure(java.lang.String additionalMeasureName)",
    "name": "getMeasure",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "additionalMeasureName"
      }
    ],
    "protocol": {
      "member": "getMeasure(java.lang.String additionalMeasureName)",
      "comment": "Returns the value of the named measure",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] argv)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.IterativeClassifierOptimizer",
      "name": "IterativeClassifierOptimizer",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.IterativeClassifierOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "argv"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] argv)",
      "comment": "Main method for testing this class.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]