[
  {
    "signature": "java.util.zip.CheckedInputStream(java.io.InputStream in, java.util.zip.Checksum cksum)",
    "name": "java.util.zip.CheckedInputStream",
    "containingClass": {
      "qualifiedName": "java.util.zip.CheckedInputStream",
      "name": "CheckedInputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.CheckedInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "java.util.zip.Checksum",
          "name": "Checksum",
          "isArray": false
        },
        "name": "cksum"
      }
    ],
    "protocol": {
      "member": "java.util.zip.CheckedInputStream(java.io.InputStream in, java.util.zip.Checksum cksum)",
      "comment": "Creates an input stream using the specified Checksum.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "read()",
    "name": "read",
    "containingClass": {
      "qualifiedName": "java.util.zip.CheckedInputStream",
      "name": "CheckedInputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.CheckedInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "read()",
      "comment": "Reads a byte. Will block if no input is available.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "read(byte[] buf, int off, int len)",
    "name": "read",
    "containingClass": {
      "qualifiedName": "java.util.zip.CheckedInputStream",
      "name": "CheckedInputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.CheckedInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "off"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "protocol": {
      "member": "read(byte[] buf, int off, int len)",
      "comment": "Reads into an array of bytes. If len is not zero, the method blocks until some input is available; otherwise, no bytes are read and 0 is returned.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "skip(long n)",
    "name": "skip",
    "containingClass": {
      "qualifiedName": "java.util.zip.CheckedInputStream",
      "name": "CheckedInputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.CheckedInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "protocol": {
      "member": "skip(long n)",
      "comment": "Skips specified number of bytes of input.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getChecksum()",
    "name": "getChecksum",
    "containingClass": {
      "qualifiedName": "java.util.zip.CheckedInputStream",
      "name": "CheckedInputStream",
      "isArray": false
    },
    "targetClass": "java.util.zip.CheckedInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.zip.Checksum",
      "name": "java.util.zip.Checksum",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getChecksum()",
      "comment": "Returns the Checksum for this input stream.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]