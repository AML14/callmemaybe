[
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options.   -X <number of folds> Use cross validation for model selection using the given number of folds. (default 0, is to use training error)  -S <num> Random number seed. (default 1)  -B <classifier specification> Full class name of classifier to include, followed by scheme options. May be specified multiple times. (default: \"wekamethod_0method_1method_2\")  -D If set, classifier is run in debug mode and may output additional info to the console",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the Classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "classifiersTipText()",
    "name": "classifiersTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "classifiersTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setClassifiers(weka.classifiers.Classifier[] classifiers)",
    "name": "setClassifiers",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Lweka.classifiers.Classifier;",
          "name": "Classifier[]",
          "isArray": true
        },
        "name": "classifiers"
      }
    ],
    "protocol": {
      "member": "setClassifiers(weka.classifiers.Classifier[] classifiers)",
      "comment": "Sets the list of possible classifers to choose from.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassifiers()",
    "name": "getClassifiers",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.Classifier[]",
      "name": "weka.classifiers.Classifier[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getClassifiers()",
      "comment": "Gets the list of possible classifers to choose from.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassifier(int index)",
    "name": "getClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.Classifier",
      "name": "weka.classifiers.Classifier",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "getClassifier(int index)",
      "comment": "Gets a single classifier from the set of available classifiers.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassifierSpec(int index)",
    "name": "getClassifierSpec",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "getClassifierSpec(int index)",
      "comment": "Gets the classifier specification string, which contains the class name of the classifier and any options to the classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "seedTipText()",
    "name": "seedTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "seedTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSeed(int seed)",
    "name": "setSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seed"
      }
    ],
    "protocol": {
      "member": "setSeed(int seed)",
      "comment": "Sets the seed for random number generation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSeed()",
    "name": "getSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSeed()",
      "comment": "Gets the random number seed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "numFoldsTipText()",
    "name": "numFoldsTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "numFoldsTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNumFolds()",
    "name": "getNumFolds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNumFolds()",
      "comment": "Gets the number of folds for cross-validation. A number less than 2 specifies using training error rather than cross-validation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNumFolds(int numFolds)",
    "name": "setNumFolds",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numFolds"
      }
    ],
    "protocol": {
      "member": "setNumFolds(int numFolds)",
      "comment": "Sets the number of folds for cross-validation. A number less than 2 specifies using training error rather than cross-validation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "debugTipText()",
    "name": "debugTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "debugTipText()",
      "comment": "Returns the tip text for this property",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDebug(boolean debug)",
    "name": "setDebug",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "debug"
      }
    ],
    "protocol": {
      "member": "setDebug(boolean debug)",
      "comment": "Set debugging mode",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDebug()",
    "name": "getDebug",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDebug()",
      "comment": "Get whether debugging is turned on",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getBestClassifierIndex()",
    "name": "getBestClassifierIndex",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getBestClassifierIndex()",
      "comment": "Get the index of the classifier that was determined as best during cross-validation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances data)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances data)",
      "comment": "Buildclassifier selects a classifier from the set of classifiers by minimising error on the training data.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance instance)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance instance)",
      "comment": "Returns class probabilities.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Output a representation of this classifier",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] argv)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.meta.MultiScheme",
      "name": "MultiScheme",
      "isArray": false
    },
    "targetClass": "weka.classifiers.meta.MultiScheme",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "argv"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] argv)",
      "comment": "Main method for testing this class.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]