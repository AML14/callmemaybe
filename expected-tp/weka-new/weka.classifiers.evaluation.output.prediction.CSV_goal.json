[
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing the output generator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDisplay()",
    "name": "getDisplay",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDisplay()",
      "comment": "Returns a short display text, to be used in comboboxes.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration of all the available options..",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Sets the OptionHandler's options using the given list. All options will be set (or reset) during this call (imethod_0. incremental setting of options is not possible).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current option settings for the OptionHandler.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setUseTab(boolean value)",
    "name": "setUseTab",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "setUseTab(boolean value)",
      "comment": "Sets whether to use tab instead of comma as separator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getUseTab()",
    "name": "getUseTab",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getUseTab()",
      "comment": "Returns whether tab is used as separator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "useTabTipText()",
    "name": "useTabTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "useTabTipText()",
      "comment": "Returns the tip text for this property.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "doPrintHeader()",
    "name": "doPrintHeader",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "doPrintHeader()",
      "comment": "Performs the actual printing of the header.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "attributeValuesString(weka.core.Instance instance)",
    "name": "attributeValuesString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "instance"
      }
    ],
    "protocol": {
      "member": "attributeValuesString(weka.core.Instance instance)",
      "comment": "Builds a string listing the attribute values in a specified range of indices, separated by commas and enclosed in brackets.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "doPrintClassification(double[] dist, weka.core.Instance inst, int index)",
    "name": "doPrintClassification",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "dist"
      },
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "inst"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "doPrintClassification(double[] dist, weka.core.Instance inst, int index)",
      "comment": "Store the prediction made by the classifier as a string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "doPrintClassification(weka.classifiers.Classifier classifier, weka.core.Instance inst, int index)",
    "name": "doPrintClassification",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.classifiers.Classifier",
          "name": "Classifier",
          "isArray": false
        },
        "name": "classifier"
      },
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "inst"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "protocol": {
      "member": "doPrintClassification(weka.classifiers.Classifier classifier, weka.core.Instance inst, int index)",
      "comment": "Store the prediction made by the classifier as a string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "doPrintFooter()",
    "name": "doPrintFooter",
    "containingClass": {
      "qualifiedName": "weka.classifiers.evaluation.output.prediction.CSV",
      "name": "CSV",
      "isArray": false
    },
    "targetClass": "weka.classifiers.evaluation.output.prediction.CSV",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "doPrintFooter()",
      "comment": "Does nothing.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]