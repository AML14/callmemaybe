[
  {
    "signature": "weka.classifiers.trees.m5.Impurity(int partition, int attribute, weka.core.Instances inst, int k)",
    "name": "weka.classifiers.trees.m5.Impurity",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.m5.Impurity",
      "name": "Impurity",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.m5.Impurity",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "partition"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "attribute"
      },
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "inst"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      }
    ],
    "protocol": {
      "member": "weka.classifiers.trees.m5.Impurity(int partition, int attribute, weka.core.Instances inst, int k)",
      "comment": "Constructs an Impurity object containing the impurity values of partitioning the instances using an attribute",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.m5.Impurity",
      "name": "Impurity",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.m5.Impurity",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Converts an Impurity object to a string",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "incremental(double value, int type)",
    "name": "incremental",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.m5.Impurity",
      "name": "Impurity",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.m5.Impurity",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "protocol": {
      "member": "incremental(double value, int type)",
      "comment": "Incrementally computes the impurirty values",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.trees.m5.Impurity",
      "name": "Impurity",
      "isArray": false
    },
    "targetClass": "weka.classifiers.trees.m5.Impurity",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]