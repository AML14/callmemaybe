[
  {
    "signature": "org.graphstream.ui.swingViewer.util.DefaultCamera(org.graphstream.ui.graphicGraph.GraphicGraph graph)",
    "name": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicGraph",
          "name": "GraphicGraph",
          "isArray": false
        },
        "name": "graph"
      }
    ],
    "protocol": {
      "member": "org.graphstream.ui.swingViewer.util.DefaultCamera(org.graphstream.ui.graphicGraph.GraphicGraph graph)",
      "comment": "New camera.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getViewCenter()",
    "name": "getViewCenter",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.geom.Point3",
      "name": "org.graphstream.ui.geom.Point3",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getViewCenter()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setViewCenter(double x, double y, double z)",
    "name": "setViewCenter",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "z"
      }
    ],
    "protocol": {
      "member": "setViewCenter(double x, double y, double z)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setViewCenter(double x, double y)",
    "name": "setViewCenter",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "protocol": {
      "member": "setViewCenter(double x, double y)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getViewPercent()",
    "name": "getViewPercent",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getViewPercent()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setViewPercent(double percent)",
    "name": "setViewPercent",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "percent"
      }
    ],
    "protocol": {
      "member": "setViewPercent(double percent)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getViewRotation()",
    "name": "getViewRotation",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getViewRotation()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMetrics()",
    "name": "getMetrics",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "name": "org.graphstream.ui.swingViewer.util.GraphMetrics",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getMetrics()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "resetView()",
    "name": "resetView",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "resetView()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setBounds(double minx, double miny, double minz, double maxx, double maxy, double maxz)",
    "name": "setBounds",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "minx"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "miny"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "minz"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxx"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxz"
      }
    ],
    "protocol": {
      "member": "setBounds(double minx, double miny, double minz, double maxx, double maxy, double maxz)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getGraphDimension()",
    "name": "getGraphDimension",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getGraphDimension()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isVisible(org.graphstream.ui.graphicGraph.GraphicElement element)",
    "name": "isVisible",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
          "name": "GraphicElement",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "protocol": {
      "member": "isVisible(org.graphstream.ui.graphicGraph.GraphicElement element)",
      "comment": "True if the element should be visible on screen. The method used is to transform the center of the element (which is always in graph units) using the camera actual transformation to put it in pixel units. Then to look in the style sheet the size of the element and to test if its enclosing rectangle intersects the view port. For edges, its two nodes are used. As a speed-up by default if the camera is in automatic fitting mode, all element should be visible, and the test always returns true.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "transformPxToGu(double x, double y)",
    "name": "transformPxToGu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.geom.Point3",
      "name": "org.graphstream.ui.geom.Point3",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "protocol": {
      "member": "transformPxToGu(double x, double y)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "transformGuToPx(double x, double y, double z)",
    "name": "transformGuToPx",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.geom.Point3",
      "name": "org.graphstream.ui.geom.Point3",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "z"
      }
    ],
    "protocol": {
      "member": "transformGuToPx(double x, double y, double z)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "checkVisibility(org.graphstream.ui.graphicGraph.GraphicGraph graph)",
    "name": "checkVisibility",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicGraph",
          "name": "GraphicGraph",
          "isArray": false
        },
        "name": "graph"
      }
    ],
    "protocol": {
      "member": "checkVisibility(org.graphstream.ui.graphicGraph.GraphicGraph graph)",
      "comment": "Process each node to check if it is in the actual view port, and mark invisible nodes. This method allows for fast node, sprite and edge visibility checking when drawing. This must be called before each rendering (if the view port changed).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findNodeOrSpriteAt(org.graphstream.ui.graphicGraph.GraphicGraph graph, double x, double y)",
    "name": "findNodeOrSpriteAt",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
      "name": "org.graphstream.ui.graphicGraph.GraphicElement",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicGraph",
          "name": "GraphicGraph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "protocol": {
      "member": "findNodeOrSpriteAt(org.graphstream.ui.graphicGraph.GraphicGraph graph, double x, double y)",
      "comment": "Search for the first node or sprite (in that order) that contains the point at coordinates (x, y).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "allNodesOrSpritesIn(org.graphstream.ui.graphicGraph.GraphicGraph graph, double x1, double y1, double x2, double y2)",
    "name": "allNodesOrSpritesIn",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<org.graphstream.ui.graphicGraph.GraphicElement>",
      "name": "java.util.Collection<org.graphstream.ui.graphicGraph.GraphicElement>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicGraph",
          "name": "GraphicGraph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x1"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y1"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x2"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y2"
      }
    ],
    "protocol": {
      "member": "allNodesOrSpritesIn(org.graphstream.ui.graphicGraph.GraphicGraph graph, double x1, double y1, double x2, double y2)",
      "comment": "Search for all the nodes and sprites contained inside the rectangle (x1,y1)-(x2,y2).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSpritePosition(org.graphstream.ui.graphicGraph.GraphicSprite sprite, java.awt.geom.Point2D$Double pos, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
    "name": "getSpritePosition",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.geom.Point2D$Double",
      "name": "java.awt.geom.Point2D$Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicSprite",
          "name": "GraphicSprite",
          "isArray": false
        },
        "name": "sprite"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Point2D$Double",
          "name": "Double",
          "isArray": false
        },
        "name": "pos"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units",
          "name": "Units",
          "isArray": false
        },
        "name": "units"
      }
    ],
    "protocol": {
      "member": "getSpritePosition(org.graphstream.ui.graphicGraph.GraphicSprite sprite, java.awt.geom.Point2D$Double pos, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
      "comment": "Compute the real position of a sprite according to its eventual attachment in graph units.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getGraphViewport()",
    "name": "getGraphViewport",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getGraphViewport()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setGraphViewport(double minx, double miny, double maxx, double maxy)",
    "name": "setGraphViewport",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "minx"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "miny"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxx"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxy"
      }
    ],
    "protocol": {
      "member": "setGraphViewport(double minx, double miny, double maxx, double maxy)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeGraphViewport()",
    "name": "removeGraphViewport",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "removeGraphViewport()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "pushView(org.graphstream.ui.graphicGraph.GraphicGraph graph, java.awt.Graphics2D g2)",
    "name": "pushView",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicGraph",
          "name": "GraphicGraph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      }
    ],
    "protocol": {
      "member": "pushView(org.graphstream.ui.graphicGraph.GraphicGraph graph, java.awt.Graphics2D g2)",
      "comment": "Set the camera view in the given graphics and backup the previous transform of the graphics. Call method_0 to restore the saved transform. You can only push one time the view.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "popView(java.awt.Graphics2D g2)",
    "name": "popView",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      }
    ],
    "protocol": {
      "member": "popView(java.awt.Graphics2D g2)",
      "comment": "Restore the transform that was used before method_0 is used.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "autoFitView(java.awt.Graphics2D g2)",
    "name": "autoFitView",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      }
    ],
    "protocol": {
      "member": "autoFitView(java.awt.Graphics2D g2)",
      "comment": "Compute a transformation matrix that pass from graph units (user space) to pixel units (device space) so that the whole graph is visible.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "userView(java.awt.Graphics2D g2)",
    "name": "userView",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g2"
      }
    ],
    "protocol": {
      "member": "userView(java.awt.Graphics2D g2)",
      "comment": "Compute a transformation that pass from graph units (user space) to a pixel units (device space) so that the view (zoom and centre) requested by the user is produced.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setAutoFitView(boolean on)",
    "name": "setAutoFitView",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "on"
      }
    ],
    "protocol": {
      "member": "setAutoFitView(boolean on)",
      "comment": "Enable or disable automatic adjustment of the view to see the entire graph.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setZoom(double z)",
    "name": "setZoom",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "z"
      }
    ],
    "protocol": {
      "member": "setZoom(double z)",
      "comment": "Set the zoom (or percent of the graph visible), 1 means the graph is fully visible.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setViewRotation(double theta)",
    "name": "setViewRotation",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "theta"
      }
    ],
    "protocol": {
      "member": "setViewRotation(double theta)",
      "comment": "Set the rotation angle around the centre.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setViewport(double viewportX, double viewportY, double viewportWidth, double viewportHeight)",
    "name": "setViewport",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "viewportX"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "viewportY"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "viewportWidth"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "viewportHeight"
      }
    ],
    "protocol": {
      "member": "setViewport(double viewportX, double viewportY, double viewportWidth, double viewportHeight)",
      "comment": "Set the output view port size in pixels.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setPadding(org.graphstream.ui.graphicGraph.GraphicGraph graph)",
    "name": "setPadding",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicGraph",
          "name": "GraphicGraph",
          "isArray": false
        },
        "name": "graph"
      }
    ],
    "protocol": {
      "member": "setPadding(org.graphstream.ui.graphicGraph.GraphicGraph graph)",
      "comment": "Set the graph padding.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getPaddingXgu()",
    "name": "getPaddingXgu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getPaddingXgu()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getPaddingYgu()",
    "name": "getPaddingYgu",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getPaddingYgu()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getPaddingXpx()",
    "name": "getPaddingXpx",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getPaddingXpx()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getPaddingYpx()",
    "name": "getPaddingYpx",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getPaddingYpx()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isSpriteVisible(org.graphstream.ui.graphicGraph.GraphicSprite sprite)",
    "name": "isSpriteVisible",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicSprite",
          "name": "GraphicSprite",
          "isArray": false
        },
        "name": "sprite"
      }
    ],
    "protocol": {
      "member": "isSpriteVisible(org.graphstream.ui.graphicGraph.GraphicSprite sprite)",
      "comment": "Check if a sprite is visible in the current view port.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isEdgeVisible(org.graphstream.ui.graphicGraph.GraphicEdge edge)",
    "name": "isEdgeVisible",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicEdge",
          "name": "GraphicEdge",
          "isArray": false
        },
        "name": "edge"
      }
    ],
    "protocol": {
      "member": "isEdgeVisible(org.graphstream.ui.graphicGraph.GraphicEdge edge)",
      "comment": "Check if an edge is visible in the current view port.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isNodeIn(org.graphstream.ui.graphicGraph.GraphicNode node, double X1, double Y1, double X2, double Y2)",
    "name": "isNodeIn",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicNode",
          "name": "GraphicNode",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "X1"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "Y1"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "X2"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "Y2"
      }
    ],
    "protocol": {
      "member": "isNodeIn(org.graphstream.ui.graphicGraph.GraphicNode node, double X1, double Y1, double X2, double Y2)",
      "comment": "Is the given node visible in the given area.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isSpriteIn(org.graphstream.ui.graphicGraph.GraphicSprite sprite, double X1, double Y1, double X2, double Y2)",
    "name": "isSpriteIn",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicSprite",
          "name": "GraphicSprite",
          "isArray": false
        },
        "name": "sprite"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "X1"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "Y1"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "X2"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "Y2"
      }
    ],
    "protocol": {
      "member": "isSpriteIn(org.graphstream.ui.graphicGraph.GraphicSprite sprite, double X1, double Y1, double X2, double Y2)",
      "comment": "Is the given sprite visible in the given area.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "spritePositionPx(org.graphstream.ui.graphicGraph.GraphicSprite sprite)",
    "name": "spritePositionPx",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.geom.Point2D$Double",
      "name": "java.awt.geom.Point2D$Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicSprite",
          "name": "GraphicSprite",
          "isArray": false
        },
        "name": "sprite"
      }
    ],
    "protocol": {
      "member": "spritePositionPx(org.graphstream.ui.graphicGraph.GraphicSprite sprite)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nodeContains(org.graphstream.ui.graphicGraph.GraphicElement elt, double x, double y)",
    "name": "nodeContains",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
          "name": "GraphicElement",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "protocol": {
      "member": "nodeContains(org.graphstream.ui.graphicGraph.GraphicElement elt, double x, double y)",
      "comment": "Check if a node contains the given point (x,y).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "edgeContains(org.graphstream.ui.graphicGraph.GraphicElement elt, double x, double y)",
    "name": "edgeContains",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
          "name": "GraphicElement",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "protocol": {
      "member": "edgeContains(org.graphstream.ui.graphicGraph.GraphicElement elt, double x, double y)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "spriteContains(org.graphstream.ui.graphicGraph.GraphicElement elt, double x, double y)",
    "name": "spriteContains",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicElement",
          "name": "GraphicElement",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "protocol": {
      "member": "spriteContains(org.graphstream.ui.graphicGraph.GraphicElement elt, double x, double y)",
      "comment": "Check if a sprite contains the given point (x,y).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSpritePositionFree(org.graphstream.ui.graphicGraph.GraphicSprite sprite, java.awt.geom.Point2D$Double pos, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
    "name": "getSpritePositionFree",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.geom.Point2D$Double",
      "name": "java.awt.geom.Point2D$Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicSprite",
          "name": "GraphicSprite",
          "isArray": false
        },
        "name": "sprite"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Point2D$Double",
          "name": "Double",
          "isArray": false
        },
        "name": "pos"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units",
          "name": "Units",
          "isArray": false
        },
        "name": "units"
      }
    ],
    "protocol": {
      "member": "getSpritePositionFree(org.graphstream.ui.graphicGraph.GraphicSprite sprite, java.awt.geom.Point2D$Double pos, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
      "comment": "Compute the position of a sprite if it is not attached.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSpritePositionNode(org.graphstream.ui.graphicGraph.GraphicSprite sprite, java.awt.geom.Point2D$Double pos, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
    "name": "getSpritePositionNode",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.geom.Point2D$Double",
      "name": "java.awt.geom.Point2D$Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicSprite",
          "name": "GraphicSprite",
          "isArray": false
        },
        "name": "sprite"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Point2D$Double",
          "name": "Double",
          "isArray": false
        },
        "name": "pos"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units",
          "name": "Units",
          "isArray": false
        },
        "name": "units"
      }
    ],
    "protocol": {
      "member": "getSpritePositionNode(org.graphstream.ui.graphicGraph.GraphicSprite sprite, java.awt.geom.Point2D$Double pos, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
      "comment": "Compute the position of a sprite if attached to a node.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSpritePositionEdge(org.graphstream.ui.graphicGraph.GraphicSprite sprite, java.awt.geom.Point2D$Double pos, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
    "name": "getSpritePositionEdge",
    "containingClass": {
      "qualifiedName": "org.graphstream.ui.swingViewer.util.DefaultCamera",
      "name": "DefaultCamera",
      "isArray": false
    },
    "targetClass": "org.graphstream.ui.swingViewer.util.DefaultCamera",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.geom.Point2D$Double",
      "name": "java.awt.geom.Point2D$Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.GraphicSprite",
          "name": "GraphicSprite",
          "isArray": false
        },
        "name": "sprite"
      },
      {
        "type": {
          "qualifiedName": "java.awt.geom.Point2D$Double",
          "name": "Double",
          "isArray": false
        },
        "name": "pos"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units",
          "name": "Units",
          "isArray": false
        },
        "name": "units"
      }
    ],
    "protocol": {
      "member": "getSpritePositionEdge(org.graphstream.ui.graphicGraph.GraphicSprite sprite, java.awt.geom.Point2D$Double pos, org.graphstream.ui.graphicGraph.stylesheet.StyleConstants$Units units)",
      "comment": "Compute the position of a sprite if attached to an edge.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]