[
  {
    "signature": "weka.classifiers.functions.MultilayerPerceptron()",
    "name": "weka.classifiers.functions.MultilayerPerceptron",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "weka.classifiers.functions.MultilayerPerceptron()",
      "comment": "The constructor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] argv)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "argv"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] argv)",
      "comment": "Main method for testing this class.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDecay(boolean d)",
    "name": "setDecay",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "protocol": {
      "member": "setDecay(boolean d)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDecay()",
    "name": "getDecay",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDecay()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setReset(boolean r)",
    "name": "setReset",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "r"
      }
    ],
    "protocol": {
      "member": "setReset(boolean r)",
      "comment": "This sets the network up to be able to reset itself with the current settings and the learning rate at half of what it is currently. This will only happen if the network creates NaN or infinite errors. Also this will continue to happen until the network is trained properly. The learning rate will also get set back to it's original value at the end of this. This can only be set to true if the GUI is not brought up.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getReset()",
    "name": "getReset",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getReset()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNormalizeNumericClass(boolean c)",
    "name": "setNormalizeNumericClass",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "setNormalizeNumericClass(boolean c)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNormalizeNumericClass()",
    "name": "getNormalizeNumericClass",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNormalizeNumericClass()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNormalizeAttributes(boolean a)",
    "name": "setNormalizeAttributes",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "protocol": {
      "member": "setNormalizeAttributes(boolean a)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNormalizeAttributes()",
    "name": "getNormalizeAttributes",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNormalizeAttributes()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setNominalToBinaryFilter(boolean f)",
    "name": "setNominalToBinaryFilter",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "protocol": {
      "member": "setNominalToBinaryFilter(boolean f)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNominalToBinaryFilter()",
    "name": "getNominalToBinaryFilter",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getNominalToBinaryFilter()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSeed(int l)",
    "name": "setSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "l"
      }
    ],
    "protocol": {
      "member": "setSeed(int l)",
      "comment": "This seeds the random number generator, that is used when a random number is needed for the network.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSeed()",
    "name": "getSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSeed()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setValidationThreshold(int t)",
    "name": "setValidationThreshold",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "protocol": {
      "member": "setValidationThreshold(int t)",
      "comment": "This sets the threshold to use for when validation testing is being done. It works by ending testing once the error on the validation set has consecutively increased a certain number of times.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getValidationThreshold()",
    "name": "getValidationThreshold",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getValidationThreshold()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setLearningRate(double l)",
    "name": "setLearningRate",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "l"
      }
    ],
    "protocol": {
      "member": "setLearningRate(double l)",
      "comment": "The learning rate can be set using this command. NOTE That this is a static variable so it affect all networks that are running. Must be greater than 0 and no more than 1.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getLearningRate()",
    "name": "getLearningRate",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getLearningRate()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setMomentum(double m)",
    "name": "setMomentum",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "protocol": {
      "member": "setMomentum(double m)",
      "comment": "The momentum can be set using this command. THE same conditions apply to this as to the learning rate.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getMomentum()",
    "name": "getMomentum",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getMomentum()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setAutoBuild(boolean a)",
    "name": "setAutoBuild",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "protocol": {
      "member": "setAutoBuild(boolean a)",
      "comment": "This will set whether the network is automatically built or if it is left up to the user. (there is nothing to stop a user from altering an autobuilt network however).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getAutoBuild()",
    "name": "getAutoBuild",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getAutoBuild()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setHiddenLayers(java.lang.String h)",
    "name": "setHiddenLayers",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "h"
      }
    ],
    "protocol": {
      "member": "setHiddenLayers(java.lang.String h)",
      "comment": "This will set what the hidden layers are made up of when auto build is enabled. Note to have no hidden units, just put a single 0, Any more 0's will indicate that the string is badly formed and make it unaccepted. Negative numbers, and floats will do the same. There are also some wildcards. These are 'a' = (number of attributes + number of classes) / 2, 'i' = number of attributes, 'o' = number of classes, and 't' = number of attributes + number of classes.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getHiddenLayers()",
    "name": "getHiddenLayers",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getHiddenLayers()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setGUI(boolean a)",
    "name": "setGUI",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "protocol": {
      "member": "setGUI(boolean a)",
      "comment": "This will set whether A GUI is brought up to allow interaction by the user with the neural network during training.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getGUI()",
    "name": "getGUI",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getGUI()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setValidationSetSize(int a)",
    "name": "setValidationSetSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "protocol": {
      "member": "setValidationSetSize(int a)",
      "comment": "This will set the size of the validation set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getValidationSetSize()",
    "name": "getValidationSetSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getValidationSetSize()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setTrainingTime(int n)",
    "name": "setTrainingTime",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "protocol": {
      "member": "setTrainingTime(int n)",
      "comment": "Set the number of training epochs to perform. Must be greater than 0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTrainingTime()",
    "name": "getTrainingTime",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getTrainingTime()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "blocker(boolean tf)",
    "name": "blocker",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "tf"
      }
    ],
    "protocol": {
      "member": "blocker(boolean tf)",
      "comment": "A function used to stop the code that called buildclassifier from continuing on before the user has finished the decision tree.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getCapabilities()",
    "name": "getCapabilities",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.Capabilities",
      "name": "weka.core.Capabilities",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getCapabilities()",
      "comment": "Returns default capabilities of the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "buildClassifier(weka.core.Instances i)",
    "name": "buildClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instances",
          "name": "Instances",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "protocol": {
      "member": "buildClassifier(weka.core.Instances i)",
      "comment": "Call this function to build and train a neural network for the training data provided.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distributionForInstance(weka.core.Instance i)",
    "name": "distributionForInstance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.core.Instance",
          "name": "Instance",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "protocol": {
      "member": "distributionForInstance(weka.core.Instance i)",
      "comment": "Call this function to predict the class of an instance once a classification model has been built with the buildClassifier call.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Parses a given list of options.   -L <learning rate> Learning Rate for the backpropagation algorithm. (Value should be between 0 - 1, Default = 0method_0).   -M <momentum> Momentum Rate for the backpropagation algorithm. (Value should be between 0 - 1, Default = 0method_1).   -N <number of epochs> Number of epochs to train through. (Default = 500).   -V <percentage size of validation set> Percentage size of validation set to use to terminate training (if this is non zero it can pre-empt num of epochs. (Value should be between 0 - 100, Default = 0).   -S <seed> The value used to seed the random number generator (Value should be >= 0 and and a long, Default = 0).   -E <threshold for number of consequetive errors> The consequetive number of errors allowed for validation testing before the netwrok terminates. (Value should be > 0, Default = 20).   -G GUI will be opened. (Use this to bring up a GUI).   -A Autocreation of the network connections will NOT be done. (This will be ignored if -G is NOT set)   -B A NominalToBinary filter will NOT automatically be used. (Set this to not use a NominalToBinary filter).   -H <comma seperated numbers for nodes on each layer> The hidden layers to be created for the network. (Value should be a list of comma separated Natural numbers or the letters 'a' = (attribs + classes) / 2, 'i' = attribs, 'o' = classes, 't' = attribs .+ classes) for wildcard values, Default = a).   -C Normalizing a numeric class will NOT be done. (Set this to not normalize the class if it's numeric).   -I Normalizing the attributes will NOT be done. (Set this to not normalize the attributes).   -R Reseting the network will NOT be allowed. (Set this to not allow the network to reset).   -D Learning rate decay will occur. (Set this to cause the learning rate to decay).  <!-- options-end -->",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of NeuralNet.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "This will return a string describing the classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "learningRateTipText()",
    "name": "learningRateTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "learningRateTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "momentumTipText()",
    "name": "momentumTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "momentumTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "autoBuildTipText()",
    "name": "autoBuildTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "autoBuildTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "seedTipText()",
    "name": "seedTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "seedTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "validationThresholdTipText()",
    "name": "validationThresholdTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "validationThresholdTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "GUITipText()",
    "name": "GUITipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "GUITipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "validationSetSizeTipText()",
    "name": "validationSetSizeTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "validationSetSizeTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "trainingTimeTipText()",
    "name": "trainingTimeTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "trainingTimeTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "nominalToBinaryFilterTipText()",
    "name": "nominalToBinaryFilterTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "nominalToBinaryFilterTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hiddenLayersTipText()",
    "name": "hiddenLayersTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "hiddenLayersTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normalizeNumericClassTipText()",
    "name": "normalizeNumericClassTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "normalizeNumericClassTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normalizeAttributesTipText()",
    "name": "normalizeAttributesTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "normalizeAttributesTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "resetTipText()",
    "name": "resetTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "resetTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "decayTipText()",
    "name": "decayTipText",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "decayTipText()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.functions.MultilayerPerceptron",
      "name": "MultilayerPerceptron",
      "isArray": false
    },
    "targetClass": "weka.classifiers.functions.MultilayerPerceptron",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]