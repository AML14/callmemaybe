[
  {
    "signature": "globalInfo()",
    "name": "globalInfo",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "globalInfo()",
      "comment": "Returns a string describing this object",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTechnicalInformation()",
    "name": "getTechnicalInformation",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.core.TechnicalInformation",
      "name": "weka.core.TechnicalInformation",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getTechnicalInformation()",
      "comment": "Returns an instance of a TechnicalInformation object, containing detailed information about the technical background of this class, emethod_0., paper reference or book this class is based on.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "listOptions()",
    "name": "listOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<weka.core.Option>",
      "name": "java.util.Enumeration<weka.core.Option>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "listOptions()",
      "comment": "Returns an enumeration describing the available options.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOptions(java.lang.String[] options)",
    "name": "setOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "options"
      }
    ],
    "protocol": {
      "member": "setOptions(java.lang.String[] options)",
      "comment": "Sets the OptionHandler's options using the given list. All options will be set (or reset) during this call (imethod_0. incremental setting of options is not possible).   -c <class index> The index of the class attribute. (default last)  -D Turn on debugging output.  -l <num> The number of times each instance is classified. (default 10)  -p <proportion of objects in common> The average proportion of instances common between any two training sets  -s <seed> The random number seed used.  -t <name of arff file> The name of the arff file used for the decomposition.  -T <number of instances in training set> The number of instances in the training set.  -W <classifier class name> Full class name of the learner used in the decomposition. eg: wekamethod_1method_2method_3  Options specific to learner wekamethod_1method_5method_6:   -D If set, classifier is run in debug mode and may output additional info to the console",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [],
    "protocol": {
      "member": "getOptions()",
      "comment": "Gets the current settings of the CheckClassifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setClassifier(weka.classifiers.Classifier newClassifier)",
    "name": "setClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "weka.classifiers.Classifier",
          "name": "Classifier",
          "isArray": false
        },
        "name": "newClassifier"
      }
    ],
    "protocol": {
      "member": "setClassifier(weka.classifiers.Classifier newClassifier)",
      "comment": "Set the classifiers being analysed",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassifier()",
    "name": "getClassifier",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "weka.classifiers.Classifier",
      "name": "weka.classifiers.Classifier",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getClassifier()",
      "comment": "Gets the name of the classifier being analysed",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDebug(boolean debug)",
    "name": "setDebug",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "debug"
      }
    ],
    "protocol": {
      "member": "setDebug(boolean debug)",
      "comment": "Sets debugging mode",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDebug()",
    "name": "getDebug",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDebug()",
      "comment": "Gets whether debugging is turned on",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSeed(int seed)",
    "name": "setSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seed"
      }
    ],
    "protocol": {
      "member": "setSeed(int seed)",
      "comment": "Sets the random number seed",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSeed()",
    "name": "getSeed",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getSeed()",
      "comment": "Gets the random number seed",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setClassifyIterations(int classifyIterations)",
    "name": "setClassifyIterations",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "classifyIterations"
      }
    ],
    "protocol": {
      "member": "setClassifyIterations(int classifyIterations)",
      "comment": "Sets the number of times an instance is classified",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassifyIterations()",
    "name": "getClassifyIterations",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getClassifyIterations()",
      "comment": "Gets the number of times an instance is classified",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setDataFileName(java.lang.String dataFileName)",
    "name": "setDataFileName",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "dataFileName"
      }
    ],
    "protocol": {
      "member": "setDataFileName(java.lang.String dataFileName)",
      "comment": "Sets the name of the dataset file.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getDataFileName()",
    "name": "getDataFileName",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getDataFileName()",
      "comment": "Get the name of the data file used for the decomposition",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getClassIndex()",
    "name": "getClassIndex",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getClassIndex()",
      "comment": "Get the index (starting from 1) of the attribute used as the class.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setClassIndex(int classIndex)",
    "name": "setClassIndex",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "classIndex"
      }
    ],
    "protocol": {
      "member": "setClassIndex(int classIndex)",
      "comment": "Sets index of attribute to discretize on",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getKWBias()",
    "name": "getKWBias",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getKWBias()",
      "comment": "Get the calculated bias squared according to the Kohavi and Wolpert definition",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getWBias()",
    "name": "getWBias",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getWBias()",
      "comment": "Get the calculated bias according to the Webb definition",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getKWVariance()",
    "name": "getKWVariance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getKWVariance()",
      "comment": "Get the calculated variance according to the Kohavi and Wolpert definition",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getWVariance()",
    "name": "getWVariance",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getWVariance()",
      "comment": "Get the calculated variance according to the Webb definition",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getKWSigma()",
    "name": "getKWSigma",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getKWSigma()",
      "comment": "Get the calculated sigma according to the Kohavi and Wolpert definition",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setTrainSize(int size)",
    "name": "setTrainSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "protocol": {
      "member": "setTrainSize(int size)",
      "comment": "Set the training size.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTrainSize()",
    "name": "getTrainSize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getTrainSize()",
      "comment": "Get the training size",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setP(double proportion)",
    "name": "setP",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "proportion"
      }
    ],
    "protocol": {
      "member": "setP(double proportion)",
      "comment": "Set the proportion of instances that are common between two training sets used to train a classifier.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getP()",
    "name": "getP",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getP()",
      "comment": "Get the proportion of instances that are common between two training sets.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getError()",
    "name": "getError",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getError()",
      "comment": "Get the calculated error rate",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "decompose()",
    "name": "decompose",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "decompose()",
      "comment": "Carry out the bias-variance decomposition using the sub-sampled cross-validation method.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "findCentralTendencies(double[] predProbs)",
    "name": "findCentralTendencies",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Vector<java.lang.Integer>",
      "name": "java.util.Vector<java.lang.Integer>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "predProbs"
      }
    ],
    "protocol": {
      "member": "findCentralTendencies(double[] predProbs)",
      "comment": "Where the central tendency is defined as the class that was most commonly selected for a given instance. For example, instance 'x' may be classified out of 3 classes y = {1, 2, 3}, so if x is classified 10 times, and is classified as follows, '1' = 2 times, '2' = 5 times and '3' = 3 times. Then the central tendency is '2'.  However, it is important to note that this method returns a list of all classes that have the highest number of classifications. In cases where there are several classes with the largest number of classifications, then all of these classes are returned. For example if 'x' is classified '1' = 4 times, '2' = 4 times and '3' = 2 times. Then '1' and '2' are returned.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Returns description of the bias-variance decomposition results.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRevision()",
    "name": "getRevision",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getRevision()",
      "comment": "Returns the revision string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "main(java.lang.String[] args)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "args"
      }
    ],
    "protocol": {
      "member": "main(java.lang.String[] args)",
      "comment": "Test method for this class",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "randomize(int[] index, java.util.Random random)",
    "name": "randomize",
    "containingClass": {
      "qualifiedName": "weka.classifiers.BVDecomposeSegCVSub",
      "name": "BVDecomposeSegCVSub",
      "isArray": false
    },
    "targetClass": "weka.classifiers.BVDecomposeSegCVSub",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "protocol": {
      "member": "randomize(int[] index, java.util.Random random)",
      "comment": "Accepts an array of ints and randomises the values in the array, using the random seed.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]