[
  {
    "signature": "org.apache.commons.collections4.iterators.EntrySetMapIterator(java.util.Map<K, V> map)",
    "name": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "protocol": {
      "member": "org.apache.commons.collections4.iterators.EntrySetMapIterator(java.util.Map<K, V> map)",
      "comment": "Constructor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hasNext()",
    "name": "hasNext",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "hasNext()",
      "comment": "Checks to see if there are more entries still to be iterated.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "K",
      "name": "K",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "next()",
      "comment": "Gets the next key from the Map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "remove()",
      "comment": "Removes the last returned key from the underlying Map.  This method can be called once per call to method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getKey()",
    "name": "getKey",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "K",
      "name": "K",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getKey()",
      "comment": "Gets the current key, which is the key returned by the last call to method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getValue()",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "getValue()",
      "comment": "Gets the current value, which is the value associated with the last key returned by method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setValue(V value)",
    "name": "setValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "protocol": {
      "member": "setValue(V value)",
      "comment": "Sets the value associated with the current key.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "reset()",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "reset()",
      "comment": "Resets the state of the iterator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
      "name": "EntrySetMapIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.EntrySetMapIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "Gets the iterator as a String.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]