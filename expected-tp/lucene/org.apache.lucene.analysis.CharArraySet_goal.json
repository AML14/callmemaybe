[
  {
    "signature": "org.apache.lucene.analysis.CharArraySet(int startSize, boolean ignoreCase)",
    "name": "org.apache.lucene.analysis.CharArraySet",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startSize"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "ignoreCase"
      }
    ],
    "protocol": {
      "member": "org.apache.lucene.analysis.CharArraySet(int startSize, boolean ignoreCase)",
      "comment": "Create set with enough capacity to hold startSize terms",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.apache.lucene.analysis.CharArraySet(java.util.Collection<?> c, boolean ignoreCase)",
    "name": "org.apache.lucene.analysis.CharArraySet",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "ignoreCase"
      }
    ],
    "protocol": {
      "member": "org.apache.lucene.analysis.CharArraySet(java.util.Collection<?> c, boolean ignoreCase)",
      "comment": "Creates a set from a Collection of objects.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.apache.lucene.analysis.CharArraySet(org.apache.lucene.analysis.CharArrayMap<java.lang.Object> map)",
    "name": "org.apache.lucene.analysis.CharArraySet",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.lucene.analysis.CharArrayMap",
          "name": "CharArrayMap",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "protocol": {
      "member": "org.apache.lucene.analysis.CharArraySet(org.apache.lucene.analysis.CharArrayMap<java.lang.Object> map)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clear()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(char[] text, int off, int len)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "off"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "protocol": {
      "member": "contains(char[] text, int off, int len)",
      "comment": "are in the set",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.CharSequence cs)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.CharSequence",
          "name": "CharSequence",
          "isArray": false
        },
        "name": "cs"
      }
    ],
    "protocol": {
      "member": "contains(java.lang.CharSequence cs)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object o)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "contains(java.lang.Object o)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(java.lang.Object o)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "add(java.lang.Object o)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(java.lang.CharSequence text)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.CharSequence",
          "name": "CharSequence",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "protocol": {
      "member": "add(java.lang.CharSequence text)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(java.lang.String text)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "protocol": {
      "member": "add(java.lang.String text)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(char[] text)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "text"
      }
    ],
    "protocol": {
      "member": "add(char[] text)",
      "comment": "If ignoreCase is true for this Set, the text array will be directly modified. The user should never modify this text array after calling this method.",
      "kind": "FreeText",
      "condition": "!(receiverObjectID.add()->receiverObjectID)"
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "size()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "unmodifiableSet(org.apache.lucene.analysis.CharArraySet set)",
    "name": "unmodifiableSet",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "org.apache.lucene.analysis.CharArraySet",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
          "name": "CharArraySet",
          "isArray": false
        },
        "name": "set"
      }
    ],
    "protocol": {
      "member": "unmodifiableSet(org.apache.lucene.analysis.CharArraySet set)",
      "comment": "Returns an unmodifiable CharArraySet. This allows to provide unmodifiable views of internal sets for \"read-only\" use.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copy(java.util.Set<?> set)",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "org.apache.lucene.analysis.CharArraySet",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "isArray": false
        },
        "name": "set"
      }
    ],
    "protocol": {
      "member": "copy(java.util.Set<?> set)",
      "comment": "Returns a copy of the given set as a CharArraySet. If the given set is a CharArraySet the ignoreCase property will be preserved.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<java.lang.Object>",
      "name": "java.util.Iterator<java.lang.Object>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "iterator()",
      "comment": "Returns an Iterator for char[] instances in this set.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.lucene.analysis.CharArraySet",
      "name": "CharArraySet",
      "isArray": false
    },
    "targetClass": "org.apache.lucene.analysis.CharArraySet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "toString()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]