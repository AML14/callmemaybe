[
  {
    "signature": "org.graphstream.stream.net.HTTPSource(java.lang.String graphId, int port)",
    "name": "org.graphstream.stream.net.HTTPSource",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.net.HTTPSource",
      "name": "HTTPSource",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.net.HTTPSource",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "graphId"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "port"
      }
    ],
    "protocol": {
      "member": "org.graphstream.stream.net.HTTPSource(java.lang.String graphId, int port)",
      "comment": "Create a new http source. The source will be available on 'http://localhost/graphId' where graphId is passed as parameter of this constructor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "start()",
    "name": "start",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.net.HTTPSource",
      "name": "HTTPSource",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.net.HTTPSource",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "start()",
      "comment": "Start the http server.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "stop()",
    "name": "stop",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.net.HTTPSource",
      "name": "HTTPSource",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.net.HTTPSource",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "stop()",
      "comment": "Stop the http server.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "error(com.sun.net.httpserver.HttpExchange ex, java.lang.String message)",
    "name": "error",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.net.HTTPSource",
      "name": "HTTPSource",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.net.HTTPSource",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.sun.net.httpserver.HttpExchange",
          "name": "HttpExchange",
          "isArray": false
        },
        "name": "ex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "message"
      }
    ],
    "protocol": {
      "member": "error(com.sun.net.httpserver.HttpExchange ex, java.lang.String message)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "GET(com.sun.net.httpserver.HttpExchange ex)",
    "name": "GET",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.net.HTTPSource",
      "name": "HTTPSource",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.net.HTTPSource",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.HashMap<java.lang.String, java.lang.Object>",
      "name": "java.util.HashMap<java.lang.String, java.lang.Object>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.sun.net.httpserver.HttpExchange",
          "name": "HttpExchange",
          "isArray": false
        },
        "name": "ex"
      }
    ],
    "protocol": {
      "member": "GET(com.sun.net.httpserver.HttpExchange ex)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]