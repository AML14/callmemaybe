[
  {
    "signature": "java.util.HashSet()",
    "name": "java.util.HashSet",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "parameters": [],
    "protocol": {
      "member": "java.util.HashSet()",
      "comment": "Constructs a new, empty set; the backing HashMap instance has default initial capacity (16) and load factor (0method_0).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.HashSet(java.util.Collection<? extends E> c)",
    "name": "java.util.HashSet",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "protocol": {
      "member": "java.util.HashSet(java.util.Collection<? extends E> c)",
      "comment": "Constructs a new set containing the elements in the specified collection. The HashMap is created with default load factor (0method_0) and an initial capacity sufficient to contain the elements in the specified collection.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.HashSet(int initialCapacity, float loadFactor)",
    "name": "java.util.HashSet",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      }
    ],
    "protocol": {
      "member": "java.util.HashSet(int initialCapacity, float loadFactor)",
      "comment": "Constructs a new, empty set; the backing HashMap instance has the specified initial capacity and the specified load factor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.HashSet(int initialCapacity)",
    "name": "java.util.HashSet",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      }
    ],
    "protocol": {
      "member": "java.util.HashSet(int initialCapacity)",
      "comment": "Constructs a new, empty set; the backing HashMap instance has the specified initial capacity and default load factor (0method_0).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "java.util.HashSet(int initialCapacity, float loadFactor, boolean dummy)",
    "name": "java.util.HashSet",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "dummy"
      }
    ],
    "protocol": {
      "member": "java.util.HashSet(int initialCapacity, float loadFactor, boolean dummy)",
      "comment": "Constructs a new, empty linked hash set. (This package private constructor is only used by LinkedHashSet.) The backing HashMap instance is a LinkedHashMap with the specified initial capacity and the specified load factor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "iterator()",
      "comment": "Returns an iterator over the elements in this set. The elements are returned in no particular order.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "size()",
      "comment": "Returns the number of elements in this set (its cardinality).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "isEmpty()",
      "comment": "Returns true if this set contains no elements.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object o)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "contains(java.lang.Object o)",
      "comment": "Returns true if this set contains the specified element. More formally, returns true if and only if this set contains an element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;method_0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(E e)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "protocol": {
      "member": "add(E e)",
      "comment": "Adds the specified element to this set if it is not already present. More formally, adds the specified element e to this set if this set contains no element e2 such that (e==null&nbsp;?&nbsp;e2==null&nbsp;:&nbsp;method_0. If this set already contains the element, the call leaves the set unchanged and returns false.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object o)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "protocol": {
      "member": "remove(java.lang.Object o)",
      "comment": "Removes the specified element from this set if it is present. More formally, removes an element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;method_0, if this set contains such an element. Returns true if this set contained the element (or equivalently, if this set changed as a result of the call). (This set will not contain the element once the call returns.)",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clear()",
      "comment": "Removes all of the elements from this set. The set will be empty after this call returns.",
      "kind": "FreeText",
      "condition": "receiverObjectID.isEmpty()<-receiverObjectID.clear()"
    }
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "clone()",
      "comment": "Returns a shallow copy of this HashSet instance: the elements themselves are not cloned.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "spliterator()",
    "name": "spliterator",
    "containingClass": {
      "qualifiedName": "java.util.HashSet",
      "name": "HashSet",
      "isArray": false
    },
    "targetClass": "java.util.HashSet",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Spliterator<E>",
      "name": "java.util.Spliterator<E>",
      "isArray": false
    },
    "parameters": [],
    "protocol": {
      "member": "spliterator()",
      "comment": "Creates a <a href=\"method_0method_1\">late-binding</a> and fail-fast Spliterator over the elements in this set. The Spliterator reports method_2 and method_3. Overriding implementations should document the reporting of additional characteristic values.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]